Metadata-Version: 2.1
Name: pytest-data-suites
Version: 1.0.5
Summary: Class-based pytest parametrization
Home-page: https://github.com/reartnew/pytest-data-suites
License: MIT
Author: Artem Novikov
Author-email: artnew@list.ru
Requires-Python: >=3.8,<4.0
Classifier: Framework :: Pytest
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Testing
Classifier: Typing :: Typed
Requires-Dist: pytest (>=6.0,<9.0)
Project-URL: Repository, https://github.com/reartnew/pytest-data-suites
Description-Content-Type: text/markdown

# pytest-data-suites

Class-based test cases for `pytest`.

## Installation

```shell
pip install pytest-data-suites
```

## Usage example

```python
from pytest_data_suites import DataSuite


class MultiplicationDataSuite(DataSuite):
    # Using TypedDict instead of dict here could clarify your code, but that's just a demo
    positive_operands = dict(left_operand=2, right_operand=2, operation_result=4)
    negative_operands = dict(left_operand=-3, right_operand=-7, operation_result=21)


@MultiplicationDataSuite.parametrize
def test_multiplication(left_operand: float, right_operand: float, operation_result: float) -> None:
    assert left_operand * right_operand == operation_result

```

