# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from ..core.pydantic_utilities import pydantic_v1
from .connection import Connection
from .source_destination_mapping import SourceDestinationMapping


class PipelineResponse(pydantic_v1.BaseModel):
    pipeline_id: typing.Optional[str] = pydantic_v1.Field(default=None)
    """
    The ID of the pipeline
    """

    enabled: typing.Optional[bool] = None
    connection: typing.Optional[Connection] = None
    source_destination_mappings: typing.List[SourceDestinationMapping] = pydantic_v1.Field()
    """
    The source-destination mappings
    """

    metadata: typing.Optional[typing.Dict[str, typing.Any]] = None
    created_at: typing.Optional[dt.datetime] = pydantic_v1.Field(default=None)
    """
    The creation time
    """

    last_run: typing.Optional[dt.datetime] = None

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic_v1.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
