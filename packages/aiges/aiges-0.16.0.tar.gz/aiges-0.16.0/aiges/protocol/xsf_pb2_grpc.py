# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from aiges.protocol import xsf_pb2 as aiges_dot_protocol_dot_xsf__pb2


class XsfCallStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.call = channel.unary_unary(
                '/utils.XsfCall/call',
                request_serializer=aiges_dot_protocol_dot_xsf__pb2.ReqData.SerializeToString,
                response_deserializer=aiges_dot_protocol_dot_xsf__pb2.ResData.FromString,
                )


class XsfCallServicer(object):
    """Missing associated documentation comment in .proto file."""

    def call(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_XsfCallServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'call': grpc.unary_unary_rpc_method_handler(
                    servicer.call,
                    request_deserializer=aiges_dot_protocol_dot_xsf__pb2.ReqData.FromString,
                    response_serializer=aiges_dot_protocol_dot_xsf__pb2.ResData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'utils.XsfCall', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class XsfCall(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def call(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/utils.XsfCall/call',
            aiges_dot_protocol_dot_xsf__pb2.ReqData.SerializeToString,
            aiges_dot_protocol_dot_xsf__pb2.ResData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ToolBoxStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.cmdserver = channel.unary_unary(
                '/utils.ToolBox/cmdserver',
                request_serializer=aiges_dot_protocol_dot_xsf__pb2.Request.SerializeToString,
                response_deserializer=aiges_dot_protocol_dot_xsf__pb2.Response.FromString,
                )


class ToolBoxServicer(object):
    """Missing associated documentation comment in .proto file."""

    def cmdserver(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ToolBoxServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'cmdserver': grpc.unary_unary_rpc_method_handler(
                    servicer.cmdserver,
                    request_deserializer=aiges_dot_protocol_dot_xsf__pb2.Request.FromString,
                    response_serializer=aiges_dot_protocol_dot_xsf__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'utils.ToolBox', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ToolBox(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def cmdserver(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/utils.ToolBox/cmdserver',
            aiges_dot_protocol_dot_xsf__pb2.Request.SerializeToString,
            aiges_dot_protocol_dot_xsf__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
