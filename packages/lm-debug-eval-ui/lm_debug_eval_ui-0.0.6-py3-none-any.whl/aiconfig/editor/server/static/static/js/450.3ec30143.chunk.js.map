{"version":3,"file":"static/js/450.3ec30143.chunk.js","mappings":"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","sources":["../node_modules/@mantine/core/src/TransferList/RenderList/RenderList.styles.ts","../node_modules/@mantine/core/src/TransferList/RenderList/RenderList.tsx","../node_modules/@mantine/core/src/TransferList/DefaultItem/DefaultItem.tsx","../node_modules/@mantine/core/src/SimpleGrid/SimpleGrid.styles.ts","../node_modules/@mantine/core/src/SimpleGrid/get-sorted-breakpoints/get-sorted-breakpoints.ts","../node_modules/@mantine/core/src/SimpleGrid/SimpleGrid.tsx","../node_modules/@mantine/core/src/TransferList/TransferList.tsx","../node_modules/@mantine/core/src/TransferList/use-selection-state/use-selection-state.ts","evaluation/data/EvaluationDataSelector.tsx"],"sourcesContent":["import { createStyles, MantineNumberSize, rem } from '@mantine/styles';\n\ninterface RenderListStyles {\n  reversed: boolean;\n  native: boolean;\n  radius: MantineNumberSize;\n}\n\nconst ITEM_PADDING = rem(7);\n\nexport default createStyles((theme, { reversed, native, radius }: RenderListStyles) => {\n  const _radius = rem(theme.fn.radius(radius));\n\n  return {\n    transferList: {\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n    },\n\n    transferListItem: {\n      display: 'block',\n      width: `calc(100% - (${ITEM_PADDING} * 2))`,\n      padding: ITEM_PADDING,\n      marginLeft: `calc(${theme.spacing.sm} - ${ITEM_PADDING})`,\n      marginRight: `calc(${theme.spacing.sm} - ${ITEM_PADDING})`,\n      borderRadius: theme.fn.radius(radius),\n\n      '&:first-of-type': {\n        marginTop: `calc(${theme.spacing.sm} - ${ITEM_PADDING})`,\n      },\n\n      '&:last-of-type': {\n        marginBottom: `calc(${theme.spacing.sm} - ${ITEM_PADDING})`,\n      },\n    },\n\n    transferListItemHovered: {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n    },\n\n    transferListItems: {\n      overflow: native ? 'auto' : 'hidden',\n    },\n\n    transferListHeader: {\n      display: 'flex',\n      flexDirection: reversed ? 'row-reverse' : 'row',\n    },\n\n    transferListBody: {\n      flex: 1,\n      borderRadius: theme.fn.radius(radius),\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n      border: `${rem(1)} solid ${\n        theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[4]\n      }`,\n    },\n\n    transferListTitle: {\n      marginBottom: rem(5),\n    },\n\n    transferListSearch: {\n      borderTopWidth: 0,\n      borderRightWidth: 0,\n      borderLeftWidth: 0,\n      borderTopLeftRadius: reversed ? 0 : `calc(${_radius} - ${rem(1)})`,\n      borderTopRightRadius: reversed ? `calc(${_radius} - ${rem(1)})` : 0,\n      display: 'block',\n      borderBottomColor: theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[4],\n    },\n\n    transferListControl: {\n      borderTop: 0,\n      borderRightWidth: reversed ? undefined : 0,\n      borderLeftWidth: reversed ? 0 : undefined,\n      borderColor: theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[4],\n\n      '&:last-of-type': {\n        borderTopLeftRadius: reversed ? `calc(${_radius} - ${rem(1)})` : 0,\n        borderTopRightRadius: reversed ? 0 : `calc(${_radius} - ${rem(1)})`,\n      },\n\n      '&:disabled': {\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : 'transparent',\n        borderColor: theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[4],\n      },\n    },\n\n    separator: {\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      width: '100%',\n      padding: `${rem(7)} ${rem(12)}`,\n    },\n\n    separatorLabel: {\n      color: theme.colorScheme === 'dark' ? theme.colors.dark[3] : theme.colors.gray[5],\n    },\n  };\n});\n","import React, { useRef, useState } from 'react';\nimport { DefaultProps, Selectors, MantineNumberSize, rem } from '@mantine/styles';\nimport { useScrollIntoView } from '@mantine/hooks';\nimport { groupOptions } from '@mantine/utils';\nimport { SelectScrollArea } from '../../Select/SelectScrollArea/SelectScrollArea';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport { ActionIcon } from '../../ActionIcon';\nimport { TextInput } from '../../TextInput';\nimport { Text } from '../../Text';\nimport { Divider } from '../../Divider';\nimport {\n  PaginationLastIcon,\n  PaginationNextIcon,\n  PaginationFirstIcon,\n  PaginationPreviousIcon,\n} from '../../Pagination/Pagination.icons';\nimport { TransferListItem, TransferListItemComponent } from '../types';\nimport useStyles from './RenderList.styles';\n\nexport type RenderListStylesNames = Selectors<typeof useStyles>;\n\nexport interface RenderListProps extends DefaultProps<RenderListStylesNames> {\n  variant: string;\n  data: TransferListItem[];\n  onSelect(value: string): void;\n  selection: string[];\n  itemComponent: TransferListItemComponent;\n  searchPlaceholder: string;\n  query?: string;\n  onSearch(value: string): void;\n  filter(query: string, item: TransferListItem): boolean;\n  nothingFound?: React.ReactNode;\n  placeholder?: React.ReactNode;\n  title?: React.ReactNode;\n  reversed?: boolean;\n  showTransferAll?: boolean;\n  onMoveAll(): void;\n  onMove(): void;\n  height: number;\n  radius: MantineNumberSize;\n  listComponent?: React.FC<any>;\n  limit?: number;\n  transferIcon?: React.FunctionComponent<{ reversed }>;\n  transferAllIcon?: React.FunctionComponent<{ reversed }>;\n  transferAllMatchingFilter: boolean;\n}\n\nconst icons = {\n  Prev: PaginationPreviousIcon,\n  Next: PaginationNextIcon,\n  First: PaginationFirstIcon,\n  Last: PaginationLastIcon,\n};\n\nconst rtlIons = {\n  Next: PaginationPreviousIcon,\n  Prev: PaginationNextIcon,\n  Last: PaginationFirstIcon,\n  First: PaginationLastIcon,\n};\n\nexport function RenderList({\n  className,\n  data,\n  onSelect,\n  selection,\n  itemComponent: ItemComponent,\n  listComponent,\n  transferIcon: TransferIcon,\n  transferAllIcon: TransferAllIcon,\n  transferAllMatchingFilter,\n  searchPlaceholder,\n  query,\n  onSearch,\n  filter,\n  nothingFound,\n  placeholder,\n  title,\n  showTransferAll,\n  reversed,\n  onMoveAll,\n  onMove,\n  height,\n  radius,\n  classNames,\n  styles,\n  limit,\n  unstyled,\n  variant,\n}: RenderListProps) {\n  const { classes, cx, theme } = useStyles(\n    { reversed, native: listComponent !== SelectScrollArea, radius },\n    { name: 'TransferList', classNames, styles, unstyled, variant }\n  );\n  const unGroupedItems: React.ReactElement<any>[] = [];\n  const groupedItems: React.ReactElement<any>[] = [];\n  const [hovered, setHovered] = useState(-1);\n  const filteredData = data.filter((item) => filter(query, item)).slice(0, limit);\n  const ListComponent = listComponent || 'div';\n  const Icons = theme.dir === 'rtl' ? rtlIons : icons;\n\n  const itemsRefs = useRef<Record<string, HTMLButtonElement>>({});\n\n  const sortedData: TransferListItem[] = groupOptions({ data: filteredData });\n\n  const { scrollIntoView, targetRef, scrollableRef } = useScrollIntoView({\n    duration: 0,\n    offset: 5,\n    cancelable: false,\n    isList: true,\n  });\n\n  let groupName = null;\n\n  sortedData.forEach((item, index) => {\n    const itemComponent = (\n      <UnstyledButton\n        unstyled={unstyled}\n        tabIndex={-1}\n        onClick={() => onSelect(item.value)}\n        key={item.value}\n        onMouseEnter={() => setHovered(index)}\n        className={cx(classes.transferListItem, {\n          [classes.transferListItemHovered]: index === hovered,\n        })}\n        ref={(node: HTMLButtonElement) => {\n          if (itemsRefs && itemsRefs.current) {\n            itemsRefs.current[item.value] = node;\n          }\n        }}\n      >\n        <ItemComponent data={item} selected={selection.includes(item.value)} radius={radius} />\n      </UnstyledButton>\n    );\n\n    if (!item.group) {\n      unGroupedItems.push(itemComponent);\n    } else {\n      if (groupName !== item.group) {\n        groupName = item.group;\n        groupedItems.push(\n          <div className={classes.separator} key={groupName}>\n            <Divider classNames={{ label: classes.separatorLabel }} label={groupName} />\n          </div>\n        );\n      }\n      groupedItems.push(itemComponent);\n    }\n  });\n\n  if (groupedItems.length > 0 && unGroupedItems.length > 0) {\n    unGroupedItems.unshift(\n      <div className={classes.separator}>\n        <Divider unstyled={unstyled} classNames={{ label: classes.separatorLabel }} />\n      </div>\n    );\n  }\n\n  const handleSearchKeydown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    switch (event.key) {\n      case 'Enter': {\n        event.preventDefault();\n        if (filteredData[hovered]) {\n          onSelect(filteredData[hovered].value);\n        }\n        break;\n      }\n\n      case 'ArrowDown': {\n        event.preventDefault();\n        setHovered((current) => {\n          const nextIndex = current < filteredData.length - 1 ? current + 1 : current;\n\n          targetRef.current = itemsRefs.current[filteredData[nextIndex]?.value];\n\n          scrollIntoView({\n            alignment: 'end',\n          });\n\n          return nextIndex;\n        });\n        break;\n      }\n\n      case 'ArrowUp': {\n        event.preventDefault();\n        setHovered((current) => {\n          const nextIndex = current > 0 ? current - 1 : current;\n\n          targetRef.current = itemsRefs.current[filteredData[nextIndex]?.value];\n\n          scrollIntoView({\n            alignment: 'start',\n          });\n\n          return nextIndex;\n        });\n      }\n    }\n  };\n\n  const transferIcon = reversed ? <Icons.Prev size=\"1rem\" /> : <Icons.Next size=\"1rem\" />;\n  const transferAllIcon = reversed ? <Icons.First size=\"1rem\" /> : <Icons.Last size=\"1rem\" />;\n\n  return (\n    <div className={cx(classes.transferList, className)}>\n      {title && (\n        <Text weight={500} unstyled={unstyled} className={classes.transferListTitle}>\n          {title}\n        </Text>\n      )}\n\n      <div className={classes.transferListBody}>\n        <div className={classes.transferListHeader}>\n          <TextInput\n            unstyled={unstyled}\n            value={query}\n            onChange={(event) => {\n              onSearch(event.currentTarget.value);\n              setHovered(0);\n            }}\n            onFocus={() => setHovered(0)}\n            onBlur={() => setHovered(-1)}\n            placeholder={searchPlaceholder}\n            radius={0}\n            onKeyDown={handleSearchKeydown}\n            sx={{ flex: 1 }}\n            classNames={{ input: classes.transferListSearch }}\n          />\n\n          <ActionIcon\n            variant=\"default\"\n            size={36}\n            radius={0}\n            className={classes.transferListControl}\n            disabled={selection.length === 0}\n            onClick={onMove}\n            unstyled={unstyled}\n          >\n            {TransferIcon ? <TransferIcon reversed={reversed} /> : transferIcon}\n          </ActionIcon>\n\n          {showTransferAll && (\n            <ActionIcon\n              variant=\"default\"\n              size={36}\n              radius={0}\n              className={classes.transferListControl}\n              disabled={transferAllMatchingFilter ? filteredData.length === 0 : data.length === 0}\n              onClick={onMoveAll}\n              unstyled={unstyled}\n            >\n              {TransferAllIcon ? <TransferAllIcon reversed={reversed} /> : transferAllIcon}\n            </ActionIcon>\n          )}\n        </div>\n\n        <ListComponent\n          ref={scrollableRef}\n          onMouseLeave={() => setHovered(-1)}\n          className={classes.transferListItems}\n          style={{ height: rem(height), position: 'relative', overflowX: 'hidden' }}\n        >\n          {groupedItems.length > 0 || unGroupedItems.length > 0 ? (\n            <>\n              {groupedItems}\n              {unGroupedItems}\n            </>\n          ) : (\n            <Text color=\"dimmed\" unstyled={unstyled} size=\"sm\" align=\"center\" mt=\"sm\">\n              {!query && placeholder ? placeholder : nothingFound}\n            </Text>\n          )}\n        </ListComponent>\n      </div>\n    </div>\n  );\n}\n\nRenderList.displayName = '@mantine/core/RenderList';\n","import React from 'react';\nimport { Checkbox } from '../../Checkbox';\nimport type { TransferListItemComponent, TransferListItemComponentProps } from '../types';\n\nexport const DefaultItem: TransferListItemComponent = React.memo(\n  ({ data, selected, radius }: TransferListItemComponentProps) => (\n    <Checkbox\n      checked={selected}\n      onChange={() => {}}\n      label={data.label}\n      tabIndex={-1}\n      radius={radius}\n      sx={{ pointerEvents: 'none' }}\n    />\n  )\n);\n","import { createStyles, MantineNumberSize, getBreakpointValue, getSize, em } from '@mantine/styles';\nimport { getSortedBreakpoints } from './get-sorted-breakpoints/get-sorted-breakpoints';\n\nexport interface SimpleGridBreakpoint {\n  maxWidth?: MantineNumberSize;\n  minWidth?: MantineNumberSize;\n  cols: number;\n  spacing?: MantineNumberSize;\n  verticalSpacing?: MantineNumberSize;\n}\n\nexport interface SimpleGridStylesParams {\n  spacing: MantineNumberSize;\n  verticalSpacing: MantineNumberSize;\n  breakpoints: SimpleGridBreakpoint[];\n  cols: number;\n}\n\nexport default createStyles(\n  (theme, { spacing, breakpoints, cols, verticalSpacing }: SimpleGridStylesParams) => {\n    const hasVerticalSpacing = verticalSpacing != null;\n\n    const gridBreakpoints = getSortedBreakpoints(theme, breakpoints).reduce((acc, breakpoint) => {\n      const property = 'maxWidth' in breakpoint ? 'max-width' : 'min-width';\n      const breakpointSize = getSize({\n        size: property === 'max-width' ? breakpoint.maxWidth : breakpoint.minWidth,\n        sizes: theme.breakpoints,\n        units: 'em',\n      });\n\n      const breakpointValue =\n        getBreakpointValue(breakpointSize) - (property === 'max-width' ? 1 : 0);\n\n      acc[`@media (${property}: ${em(breakpointValue)})`] = {\n        gridTemplateColumns: `repeat(${breakpoint.cols}, minmax(0, 1fr))`,\n        gap: `${getSize({\n          size: breakpoint.verticalSpacing ?? (hasVerticalSpacing ? verticalSpacing : spacing),\n          sizes: theme.spacing,\n        })} ${getSize({\n          size: breakpoint.spacing ?? spacing,\n          sizes: theme.spacing,\n        })}`,\n      };\n\n      return acc;\n    }, {});\n\n    return {\n      root: {\n        boxSizing: 'border-box',\n        display: 'grid',\n        gridTemplateColumns: `repeat(${cols}, minmax(0, 1fr))`,\n        gap: `${getSize({\n          size: hasVerticalSpacing ? verticalSpacing : spacing,\n          sizes: theme.spacing,\n        })} ${getSize({ size: spacing, sizes: theme.spacing })}`,\n        ...gridBreakpoints,\n      },\n    };\n  }\n);\n","import { MantineTheme, getBreakpointValue, getSize } from '@mantine/styles';\n\nexport function getSortedBreakpoints<T extends Record<string, any>>(\n  theme: MantineTheme,\n  breakpoints: T[]\n) {\n  if (breakpoints.length === 0) {\n    return breakpoints;\n  }\n\n  const property = 'maxWidth' in breakpoints[0] ? 'maxWidth' : 'minWidth';\n  const sorted = [...breakpoints].sort(\n    (a, b) =>\n      getBreakpointValue(getSize({ size: b[property], sizes: theme.breakpoints })) -\n      getBreakpointValue(getSize({ size: a[property], sizes: theme.breakpoints }))\n  );\n\n  return property === 'minWidth' ? sorted.reverse() : sorted;\n}\n","import React, { forwardRef } from 'react';\nimport { DefaultProps, MantineNumberSize, useComponentDefaultProps } from '@mantine/styles';\nimport { Box } from '../Box';\nimport useStyles, { SimpleGridBreakpoint, SimpleGridStylesParams } from './SimpleGrid.styles';\n\nexport interface SimpleGridProps\n  extends DefaultProps<never, SimpleGridStylesParams>,\n    React.ComponentPropsWithoutRef<'div'> {\n  variant?: string;\n\n  /** Breakpoints data to change items per row and spacing based on max-width */\n  breakpoints?: SimpleGridBreakpoint[];\n\n  /** Default amount of columns, used when none of breakpoints can be applied  */\n  cols?: number;\n\n  /** Spacing between columns, used when none of breakpoints can be applied */\n  spacing?: MantineNumberSize;\n\n  /** Vertical spacing between columns, used when none of breakpoints can be applied  */\n  verticalSpacing?: MantineNumberSize;\n}\n\nconst defaultProps: Partial<SimpleGridProps> = {\n  breakpoints: [],\n  cols: 1,\n  spacing: 'md',\n};\n\nexport const SimpleGrid = forwardRef<HTMLDivElement, SimpleGridProps>((props, ref) => {\n  const {\n    className,\n    breakpoints,\n    cols,\n    spacing,\n    verticalSpacing,\n    children,\n    unstyled,\n    variant,\n    ...others\n  } = useComponentDefaultProps('SimpleGrid', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { breakpoints, cols, spacing, verticalSpacing },\n    { name: 'SimpleGrid', unstyled, variant }\n  );\n\n  return (\n    <Box className={cx(classes.root, className)} ref={ref} {...others}>\n      {children}\n    </Box>\n  );\n});\n\nSimpleGrid.displayName = '@mantine/core/SimpleGrid';\n","import React, { forwardRef } from 'react';\nimport { DefaultProps, MantineNumberSize, useComponentDefaultProps } from '@mantine/styles';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { RenderList, RenderListStylesNames } from './RenderList/RenderList';\nimport { SelectScrollArea } from '../Select/SelectScrollArea/SelectScrollArea';\nimport { DefaultItem } from './DefaultItem/DefaultItem';\nimport { SimpleGrid } from '../SimpleGrid';\nimport { useSelectionState, Selection } from './use-selection-state/use-selection-state';\nimport { TransferListData, TransferListItemComponent, TransferListItem } from './types';\n\nexport type TransferListStylesNames = RenderListStylesNames;\n\nexport interface TransferListProps\n  extends DefaultProps<TransferListStylesNames>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange' | 'placeholder'> {\n  variant?: string;\n\n  /** Current value */\n  value: TransferListData;\n\n  /** Called when value changes */\n  onChange(value: TransferListData): void;\n\n  /** Initial items selection */\n  initialSelection?: Selection;\n\n  /** Custom item component */\n  itemComponent?: TransferListItemComponent;\n\n  /** Controlled search queries */\n  searchValues?: [string, string];\n\n  /** Called when one of the search queries changes */\n  onSearch?(value: [string, string]): void;\n\n  /** Search fields placeholder */\n  searchPlaceholder?: string | [string, string];\n\n  /** Nothing found message */\n  nothingFound?: React.ReactNode | [React.ReactNode, React.ReactNode];\n\n  /** Displayed when a list is empty and there is no search query */\n  placeholder?: React.ReactNode | [React.ReactNode, React.ReactNode];\n\n  /** Function to filter search results */\n  filter?(query: string, item: TransferListItem): boolean;\n\n  /** Lists titles */\n  titles?: [string, string];\n\n  /** List items height */\n  listHeight?: number;\n\n  /** Change list component, can be used to add custom scrollbars */\n  listComponent?: any;\n\n  /** Breakpoint at which list will collapse to single column layout */\n  breakpoint?: MantineNumberSize;\n\n  /** Key of theme.radius or any valid CSS value to set border-radius, theme.defaultRadius by default */\n  radius?: MantineNumberSize;\n\n  /** Whether to hide the transfer all button */\n  showTransferAll?: boolean;\n\n  /** Limit amount of items showed at a time */\n  limit?: number;\n\n  /** Change icon used for the transfer selected control */\n  transferIcon?: React.FunctionComponent<{ reversed: boolean }>;\n\n  /** Change icon used for the transfer all control */\n  transferAllIcon?: React.FunctionComponent<{ reversed: boolean }>;\n\n  /** Whether to transfer only items matching {@link filter} when clicking the transfer all control */\n  transferAllMatchingFilter?: boolean;\n}\n\nexport function defaultFilter(query: string, item: TransferListItem) {\n  return item.label.toLowerCase().trim().includes(query.toLowerCase().trim());\n}\n\nconst defaultProps: Partial<TransferListProps> = {\n  itemComponent: DefaultItem,\n  filter: defaultFilter,\n  titles: [null, null],\n  placeholder: [null, null],\n  listHeight: 150,\n  listComponent: SelectScrollArea,\n  showTransferAll: true,\n  limit: Infinity,\n  transferAllMatchingFilter: false,\n};\n\nexport const TransferList = forwardRef<HTMLDivElement, TransferListProps>((props, ref) => {\n  const {\n    value,\n    onChange,\n    itemComponent,\n    searchPlaceholder,\n    searchValues,\n    onSearch,\n    filter,\n    nothingFound,\n    placeholder,\n    titles,\n    initialSelection,\n    listHeight,\n    listComponent,\n    showTransferAll,\n    breakpoint,\n    radius,\n    classNames,\n    styles,\n    limit,\n    unstyled,\n    transferIcon,\n    transferAllIcon,\n    variant,\n    transferAllMatchingFilter,\n    ...others\n  } = useComponentDefaultProps('TransferList', defaultProps, props);\n\n  const [selection, handlers] = useSelectionState(initialSelection);\n  const [search, handleSearch] = useUncontrolled({\n    value: searchValues,\n    defaultValue: ['', ''],\n    finalValue: ['', ''],\n    onChange: onSearch,\n  });\n\n  const handleMoveAll = (listIndex: 0 | 1) => {\n    const items: TransferListData = Array(2) as any;\n    const moveToIndex = listIndex === 0 ? 1 : 0;\n\n    if (transferAllMatchingFilter) {\n      const query = search[listIndex];\n      const shownItems = value[listIndex].filter((item) => filter(query, item)).slice(0, limit);\n      const hiddenItems = value[listIndex].filter((item) => !filter(query, item));\n\n      items[listIndex] = hiddenItems;\n      items[moveToIndex] = [...value[moveToIndex], ...shownItems];\n    } else {\n      items[listIndex] = [];\n      items[moveToIndex] = [...value[moveToIndex], ...value[listIndex]];\n    }\n\n    onChange(items);\n    handlers.deselectAll(listIndex);\n  };\n\n  const handleMove = (listIndex: 0 | 1) => {\n    const moveToIndex = listIndex === 0 ? 1 : 0;\n    const items: TransferListData = Array(2) as any;\n    const transferData = value[listIndex].reduce(\n      (acc, item) => {\n        if (!selection[listIndex].includes(item.value)) {\n          acc.filtered.push(item);\n        } else {\n          acc.current.push(item);\n        }\n        return acc;\n      },\n      { filtered: [], current: [] }\n    );\n    items[listIndex] = transferData.filtered;\n    items[moveToIndex] = [...transferData.current, ...value[moveToIndex]];\n    onChange(items);\n    handlers.deselectAll(listIndex);\n  };\n\n  const breakpoints = breakpoint ? [{ maxWidth: breakpoint, cols: 1 }] : [];\n  const sharedListProps = {\n    itemComponent,\n    listComponent,\n    transferIcon,\n    transferAllIcon,\n    filter,\n    height: listHeight,\n    showTransferAll,\n    classNames,\n    styles,\n    limit,\n    radius,\n  };\n\n  return (\n    <SimpleGrid\n      cols={2}\n      spacing=\"xl\"\n      breakpoints={breakpoints}\n      ref={ref}\n      unstyled={unstyled}\n      {...others}\n    >\n      <RenderList\n        {...sharedListProps}\n        data={value[0]}\n        selection={selection[0]}\n        onSelect={(val) => handlers.select(0, val)}\n        onMoveAll={() => handleMoveAll(0)}\n        onMove={() => handleMove(0)}\n        title={titles[0]}\n        placeholder={Array.isArray(placeholder) ? placeholder[0] : placeholder}\n        searchPlaceholder={\n          Array.isArray(searchPlaceholder) ? searchPlaceholder[0] : searchPlaceholder\n        }\n        nothingFound={Array.isArray(nothingFound) ? nothingFound[0] : nothingFound}\n        query={search[0]}\n        onSearch={(query) => handleSearch([query, search[1]])}\n        unstyled={unstyled}\n        variant={variant}\n        transferAllMatchingFilter={transferAllMatchingFilter}\n      />\n\n      <RenderList\n        {...sharedListProps}\n        data={value[1]}\n        selection={selection[1]}\n        onSelect={(val) => handlers.select(1, val)}\n        onMoveAll={() => handleMoveAll(1)}\n        onMove={() => handleMove(1)}\n        title={titles[1]}\n        placeholder={Array.isArray(placeholder) ? placeholder[1] : placeholder}\n        searchPlaceholder={\n          Array.isArray(searchPlaceholder) ? searchPlaceholder[1] : searchPlaceholder\n        }\n        nothingFound={Array.isArray(nothingFound) ? nothingFound[1] : nothingFound}\n        query={search[1]}\n        onSearch={(query) => handleSearch([search[0], query])}\n        reversed\n        unstyled={unstyled}\n        variant={variant}\n        transferAllMatchingFilter={transferAllMatchingFilter}\n      />\n    </SimpleGrid>\n  );\n});\n\nTransferList.displayName = '@mantine/core/TransferList';\n","import { useState } from 'react';\n\nexport type Selection = [string[], string[]];\n\nexport function useSelectionState(initialSelection: Selection = [[], []]) {\n  const [selection, setSelection] = useState<Selection>(initialSelection);\n\n  const handleSelect = (listIndex: 0 | 1, value: string) =>\n    setSelection((currentSelection) => {\n      const listSelection = currentSelection[listIndex];\n      let result = listSelection;\n\n      if (typeof value === 'string') {\n        if (listSelection.includes(value)) {\n          result = listSelection.filter((item) => item !== value);\n        } else {\n          result = [...listSelection, value];\n        }\n      }\n\n      const clone: Selection = [...currentSelection];\n      clone[listIndex] = result;\n      return clone;\n    });\n\n  const handleDeselect = (listIndex: 0 | 1, values: string[]) =>\n    setSelection((currentSelection) => {\n      const clone: Selection = [...currentSelection];\n      clone[listIndex] = currentSelection[listIndex].filter((item) => !values.includes(item));\n      return clone;\n    });\n\n  const handleDeselectAll = (listIndex: 0 | 1) =>\n    setSelection((currentSelection) => {\n      const clone: Selection = [...currentSelection];\n      clone[listIndex] = [];\n      return clone;\n    });\n\n  const handlers = {\n    select: handleSelect,\n    deselect: handleDeselect,\n    deselectAll: handleDeselectAll,\n  };\n\n  return [selection, handlers] as const;\n}\n","import { LoadingOverlay, TransferList, TransferListData } from \"@mantine/core\";\nimport { showNotification } from \"@mantine/notifications\";\nimport { useEffect, useState } from \"react\";\n\ntype Props = {\n  getDataIds: (search?: string) => Promise<string[]>;\n  onSelectIds: (ids: string[]) => void;\n  selectedDataIds: string[];\n};\n\nexport default function EvaluationDataSelector({\n  getDataIds,\n  onSelectIds,\n  selectedDataIds,\n}: Props) {\n  const [listValues, setListValues] = useState<TransferListData>([[], []]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    getDataIds()\n      .then((dataIds) => {\n        setListValues([\n          dataIds\n            .filter((id) => !selectedDataIds.includes(id))\n            .map((id) => ({ value: id, label: id })),\n          selectedDataIds.map((id) => ({ value: id, label: id })),\n        ]);\n      })\n      .catch((e) => {\n        showNotification({\n          title: \"Error loading data sources for evaluation\",\n          message: (e as { message?: string }).message,\n          color: \"red\",\n        });\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [getDataIds, selectedDataIds]);\n\n  const onChangeSelection = (values: TransferListData) => {\n    setListValues(values);\n    onSelectIds(values[1].map((item) => item.value));\n  };\n\n  return (\n    <div>\n      <TransferList\n        value={listValues}\n        onChange={onChangeSelection}\n        titles={[\"Available Data\", \"Selected Data\"]}\n        searchPlaceholder=\"Search...\"\n      />\n      <LoadingOverlay visible={isLoading} />\n    </div>\n  );\n}\n"],"names":["ITEM_PADDING","rem","createStyles","theme","_ref","reversed","native","radius","_radius","fn","transferList","flex","display","flexDirection","transferListItem","width","concat","padding","marginLeft","spacing","sm","marginRight","borderRadius","marginTop","marginBottom","transferListItemHovered","backgroundColor","colorScheme","colors","dark","gray","transferListItems","overflow","transferListHeader","transferListBody","white","border","transferListTitle","transferListSearch","borderTopWidth","borderRightWidth","borderLeftWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomColor","transferListControl","borderTop","borderColor","separator","boxSizing","textAlign","separatorLabel","color","icons","Prev","PaginationPreviousIcon","Next","PaginationNextIcon","First","PaginationFirstIcon","Last","PaginationLastIcon","rtlIons","RenderList","className","data","onSelect","selection","itemComponent","ItemComponent","listComponent","transferIcon","TransferIcon","transferAllIcon","TransferAllIcon","transferAllMatchingFilter","searchPlaceholder","query","onSearch","filter","nothingFound","placeholder","title","showTransferAll","onMoveAll","onMove","height","classNames","styles","limit","unstyled","variant","classes","cx","useStyles","SelectScrollArea","name","unGroupedItems","groupedItems","hovered","setHovered","useState","filteredData","item","slice","ListComponent","Icons","dir","itemsRefs","useRef","sortedData","groupOptions","scrollIntoView","targetRef","scrollableRef","useScrollIntoView","duration","offset","cancelable","isList","groupName","forEach","index","React","UnstyledButton","tabIndex","onClick","value","key","onMouseEnter","ref","node","current","selected","includes","group","push","Divider","label","length","unshift","size","Text","weight","TextInput","onChange","event","currentTarget","onFocus","onBlur","onKeyDown","preventDefault","_a","nextIndex","alignment","sx","input","ActionIcon","disabled","onMouseLeave","style","position","overflowX","align","mt","displayName","DefaultItem","Checkbox","checked","pointerEvents","__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","enumerable","configurable","writable","__spreadValues","a","b","prop","call","breakpoints","cols","verticalSpacing","hasVerticalSpacing","gridBreakpoints","property","sorted","sort","getBreakpointValue","getSize","sizes","reverse","getSortedBreakpoints","reduce","acc","breakpoint","_b","breakpointSize","maxWidth","minWidth","units","breakpointValue","em","gridTemplateColumns","gap","root","defaultProps","SimpleGrid","forwardRef","props","useComponentDefaultProps","children","others","__objRest","source","exclude","target","indexOf","Box","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__spreadProps","toLowerCase","trim","titles","listHeight","Infinity","TransferList","searchValues","initialSelection","handlers","arguments","undefined","setSelection","select","handleSelect","listIndex","currentSelection","listSelection","result","clone","deselect","handleDeselect","values","deselectAll","useSelectionState","search","handleSearch","useUncontrolled","defaultValue","finalValue","handleMoveAll","items","Array","moveToIndex","shownItems","hiddenItems","handleMove","transferData","filtered","sharedListProps","val","isArray","EvaluationDataSelector","getDataIds","onSelectIds","selectedDataIds","listValues","setListValues","isLoading","setIsLoading","useEffect","then","dataIds","id","map","catch","e","showNotification","message","finally","_jsxs","_jsx","LoadingOverlay","visible"],"sourceRoot":""}