{"version":3,"file":"static/js/302.6a4a934a.chunk.js","mappings":"oMAeA,SAASA,EAAqBC,GAIE,IAJD,GAC7BC,EAAE,kBACFC,EAAiB,gBACjBC,GAC2BH,EAE3B,MAAMI,EAA4BH,EAC/BI,QAAQ,WAAY,IACpBA,QAAQ,YAAa,IACxB,OACEC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,MAAO,EAAEH,SAAEN,KAClBO,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACRC,MAAM,yBACNC,MAAwB,OAAjBX,QAAiB,IAAjBA,EAAAA,EAAqB,GAC5BY,YAAW,qCAAAC,OAAuCX,EAAyB,YAC3EY,SAAWC,GAAMd,EAAgBF,EAAIgB,EAAEC,cAAcL,WAI7D,CAEe,SAASM,EAAmCC,GAIhD,IAJiD,QAC1DC,EAAO,mBACPC,EAAkB,gBAClBnB,GACMiB,EACN,MAAOG,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,IAE/BC,GAAkBC,EAAAA,EAAAA,UACtB,IACEN,EAAQO,QAAQ3B,GAAOA,EAAG4B,cAAcC,SAASP,EAAOM,kBAC1D,CAACR,EAASE,IAGZ,OACEf,EAAAA,EAAAA,KAAA,OAAAD,SAC8B,IAA3BmB,EAAgBK,QACfvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAI,CAAAzB,SAAC,mCAEND,EAAAA,EAAAA,MAAA2B,EAAAA,SAAA,CAAA1B,SAAA,CACGc,EAAQU,OAAS,IAChBvB,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACRG,YAAY,YACZD,MAAOU,EACPP,SAAWC,GAAMO,EAAUP,EAAEiB,OAAOrB,UAGxCL,EAAAA,EAAAA,KAAC2B,EAAAA,EAAU,CAACC,IAAK,IAAKC,KAAK,OAAOC,MAAO,CAAEC,UAAW,UAAWhC,SAC9DmB,EAAgBc,KAAKvC,IACpBO,EAAAA,EAAAA,KAACiC,EAAAA,EAAI,CAAUC,GAAG,KAAInC,UACpBC,EAAAA,EAAAA,KAACT,EAAqB,CAEpBE,GAAIA,EACJC,kBAAmBoB,EAAmBrB,GACtCE,gBAAiBA,GAHZF,IAFEA,WAczB,C","sources":["evaluation/data/SpecificEvaluationDataConfiguration.tsx"],"sourcesContent":["import { Card, ScrollArea, Text, TextInput, Title } from \"@mantine/core\";\nimport { useMemo, useState } from \"react\";\n\ntype Props = {\n  dataConfigurations: Record<string, string | null>;\n  dataIds: string[];\n  onConfigureData: (id: string, path: string) => void;\n};\n\ntype DataConfigurationItemProps = {\n  id: string;\n  dataConfiguration: string | null;\n  onConfigureData: (id: string, path: string) => void;\n};\n\nfunction DataConfigurationItem({\n  id,\n  dataConfiguration,\n  onConfigureData,\n}: DataConfigurationItemProps) {\n  // TODO: Update this to be filenames from response instead of text input\n  const idWithoutPathAndExtension = id\n    .replace(/^.*[\\\\/]/, \"\")\n    .replace(/\\.[^/.]+$/, \"\");\n  return (\n    <div>\n      <Title order={4}>{id}</Title>\n      <TextInput\n        label=\"Ground truth file path\"\n        value={dataConfiguration ?? \"\"}\n        placeholder={`Enter file path, e.g. data/folder/${idWithoutPathAndExtension}_RZ.xlsx`}\n        onChange={(e) => onConfigureData(id, e.currentTarget.value)}\n      />\n    </div>\n  );\n}\n\nexport default function SpecificEvaluationDataConfiguration({\n  dataIds,\n  dataConfigurations,\n  onConfigureData,\n}: Props) {\n  const [search, setSearch] = useState(\"\");\n\n  const filteredDataIds = useMemo(\n    () =>\n      dataIds.filter((id) => id.toLowerCase().includes(search.toLowerCase())),\n    [dataIds, search]\n  );\n\n  return (\n    <div>\n      {filteredDataIds.length === 0 ? (\n        <Text>No data selected to configure</Text>\n      ) : (\n        <>\n          {dataIds.length > 2 && (\n            <TextInput\n              placeholder=\"Search...\"\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n            />\n          )}\n          <ScrollArea mah={300} type=\"auto\" style={{ overflowY: \"scroll\" }}>\n            {filteredDataIds.map((id) => (\n              <Card key={id} my=\"xs\">\n                <DataConfigurationItem\n                  key={id}\n                  id={id}\n                  dataConfiguration={dataConfigurations[id]}\n                  onConfigureData={onConfigureData}\n                />\n              </Card>\n            ))}\n          </ScrollArea>\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":["DataConfigurationItem","_ref","id","dataConfiguration","onConfigureData","idWithoutPathAndExtension","replace","_jsxs","children","_jsx","Title","order","TextInput","label","value","placeholder","concat","onChange","e","currentTarget","SpecificEvaluationDataConfiguration","_ref2","dataIds","dataConfigurations","search","setSearch","useState","filteredDataIds","useMemo","filter","toLowerCase","includes","length","Text","_Fragment","target","ScrollArea","mah","type","style","overflowY","map","Card","my"],"sourceRoot":""}