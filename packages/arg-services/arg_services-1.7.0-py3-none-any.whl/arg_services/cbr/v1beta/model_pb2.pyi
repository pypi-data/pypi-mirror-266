"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import arg_services.graph.v1.graph_pb2
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class AnnotatedGraph(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GRAPH_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    @property
    def graph(self) -> arg_services.graph.v1.graph_pb2.Graph: ...
    text: builtins.str
    def __init__(
        self,
        *,
        graph: arg_services.graph.v1.graph_pb2.Graph | None = ...,
        text: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["graph", b"graph"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["graph", b"graph", "text", b"text"]) -> None: ...

global___AnnotatedGraph = AnnotatedGraph

@typing_extensions.final
class CasebaseFilter(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class KwargsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    CASES_FIELD_NUMBER: builtins.int
    KWARGS_FIELD_NUMBER: builtins.int
    name: builtins.str
    cases: builtins.str
    @property
    def kwargs(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        cases: builtins.str = ...,
        kwargs: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cases", b"cases", "kwargs", b"kwargs", "name", b"name"]) -> None: ...

global___CasebaseFilter = CasebaseFilter
