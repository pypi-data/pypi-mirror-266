"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class SegmentationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEXT_FIELD_NUMBER: builtins.int
    EXTRAS_FIELD_NUMBER: builtins.int
    text: builtins.str
    @property
    def extras(self) -> google.protobuf.struct_pb2.Struct:
        """Implementation-specific information can be encoded here"""
    def __init__(
        self,
        *,
        text: builtins.str = ...,
        extras: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["extras", b"extras"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["extras", b"extras", "text", b"text"]) -> None: ...

global___SegmentationRequest = SegmentationRequest

@typing_extensions.final
class SegmentationResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SEGMENTS_FIELD_NUMBER: builtins.int
    EXTRAS_FIELD_NUMBER: builtins.int
    @property
    def segments(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Segment]: ...
    @property
    def extras(self) -> google.protobuf.struct_pb2.Struct:
        """Implementation-specific information can be encoded here"""
    def __init__(
        self,
        *,
        segments: collections.abc.Iterable[global___Segment] | None = ...,
        extras: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["extras", b"extras"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["extras", b"extras", "segments", b"segments"]) -> None: ...

global___SegmentationResponse = SegmentationResponse

@typing_extensions.final
class Segment(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEXT_FIELD_NUMBER: builtins.int
    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    text: builtins.str
    start: builtins.int
    end: builtins.int
    def __init__(
        self,
        *,
        text: builtins.str = ...,
        start: builtins.int = ...,
        end: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["end", b"end", "start", b"start", "text", b"text"]) -> None: ...

global___Segment = Segment

@typing_extensions.final
class ClassificationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class SegmentsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    SEGMENTS_FIELD_NUMBER: builtins.int
    EXTRAS_FIELD_NUMBER: builtins.int
    @property
    def segments(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    @property
    def extras(self) -> google.protobuf.struct_pb2.Struct:
        """Implementation-specific information can be encoded here"""
    def __init__(
        self,
        *,
        segments: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        extras: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["extras", b"extras"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["extras", b"extras", "segments", b"segments"]) -> None: ...

global___ClassificationRequest = ClassificationRequest

@typing_extensions.final
class ClassificationResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ADUS_FIELD_NUMBER: builtins.int
    EXTRAS_FIELD_NUMBER: builtins.int
    @property
    def adus(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Adu]: ...
    @property
    def extras(self) -> google.protobuf.struct_pb2.Struct:
        """Implementation-specific information can be encoded here"""
    def __init__(
        self,
        *,
        adus: collections.abc.Iterable[global___Adu] | None = ...,
        extras: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["extras", b"extras"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["adus", b"adus", "extras", b"extras"]) -> None: ...

global___ClassificationResponse = ClassificationResponse

@typing_extensions.final
class Adu(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SEGMENT_ID_FIELD_NUMBER: builtins.int
    TOKENS_FIELD_NUMBER: builtins.int
    segment_id: builtins.str
    @property
    def tokens(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Token]: ...
    def __init__(
        self,
        *,
        segment_id: builtins.str = ...,
        tokens: collections.abc.Iterable[global___Token] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["segment_id", b"segment_id", "tokens", b"tokens"]) -> None: ...

global___Adu = Adu

@typing_extensions.final
class Token(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TEXT_FIELD_NUMBER: builtins.int
    ARGUMENTATIVE_FIELD_NUMBER: builtins.int
    KEYWORD_FIELD_NUMBER: builtins.int
    text: builtins.str
    argumentative: builtins.bool
    keyword: builtins.bool
    def __init__(
        self,
        *,
        text: builtins.str = ...,
        argumentative: builtins.bool = ...,
        keyword: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["argumentative", b"argumentative", "keyword", b"keyword", "text", b"text"]) -> None: ...

global___Token = Token
