"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.struct_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _SuitabilityType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _SuitabilityTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SuitabilityType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    SUITABILITY_TYPE_UNSPECIFIED: _SuitabilityType.ValueType  # 0
    SUITABILITY_TYPE_NO_EXPERT: _SuitabilityType.ValueType  # 1
    SUITABILITY_TYPE_SOMEWHAT_EXPERT: _SuitabilityType.ValueType  # 2
    SUITABILITY_TYPE_ABSOLUTE_EXPERT: _SuitabilityType.ValueType  # 3

class SuitabilityType(_SuitabilityType, metaclass=_SuitabilityTypeEnumTypeWrapper): ...

SUITABILITY_TYPE_UNSPECIFIED: SuitabilityType.ValueType  # 0
SUITABILITY_TYPE_NO_EXPERT: SuitabilityType.ValueType  # 1
SUITABILITY_TYPE_SOMEWHAT_EXPERT: SuitabilityType.ValueType  # 2
SUITABILITY_TYPE_ABSOLUTE_EXPERT: SuitabilityType.ValueType  # 3
global___SuitabilityType = SuitabilityType

@typing_extensions.final
class ExpertSuitableRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class FeaturesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    PREMISE_FIELD_NUMBER: builtins.int
    SCHOLAR_ID_FIELD_NUMBER: builtins.int
    FEATURES_FIELD_NUMBER: builtins.int
    EXTRAS_FIELD_NUMBER: builtins.int
    premise: builtins.str
    """The premise to be validated"""
    scholar_id: builtins.str
    """Google scholar id of the expert"""
    @property
    def features(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """key: feature name, value: text of the feature"""
    @property
    def extras(self) -> google.protobuf.struct_pb2.Struct:
        """Implementation-specific information can be encoded here"""
    def __init__(
        self,
        *,
        premise: builtins.str = ...,
        scholar_id: builtins.str = ...,
        features: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        extras: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["extras", b"extras"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["extras", b"extras", "features", b"features", "premise", b"premise", "scholar_id", b"scholar_id"]) -> None: ...

global___ExpertSuitableRequest = ExpertSuitableRequest

@typing_extensions.final
class ExpertSuitableResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    PREDICTIONS_FIELD_NUMBER: builtins.int
    EXTRAS_FIELD_NUMBER: builtins.int
    type: global___SuitabilityType.ValueType
    @property
    def predictions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SuitabilityPrediction]: ...
    @property
    def extras(self) -> google.protobuf.struct_pb2.Struct:
        """Implementation-specific information can be encoded here"""
    def __init__(
        self,
        *,
        type: global___SuitabilityType.ValueType = ...,
        predictions: collections.abc.Iterable[global___SuitabilityPrediction] | None = ...,
        extras: google.protobuf.struct_pb2.Struct | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["extras", b"extras"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["extras", b"extras", "predictions", b"predictions", "type", b"type"]) -> None: ...

global___ExpertSuitableResponse = ExpertSuitableResponse

@typing_extensions.final
class SuitabilityPrediction(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PROBABILITY_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    probability: builtins.float
    type: global___SuitabilityType.ValueType
    def __init__(
        self,
        *,
        probability: builtins.float = ...,
        type: global___SuitabilityType.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["probability", b"probability", "type", b"type"]) -> None: ...

global___SuitabilityPrediction = SuitabilityPrediction
