# coding: utf-8

"""
    VoiceOS

    VoiceOS API

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from voiceos.models.agent_response import AgentResponse

class TestAgentResponse(unittest.TestCase):
    """AgentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AgentResponse:
        """Test AgentResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AgentResponse`
        """
        model = AgentResponse()
        if include_optional:
            return AgentResponse(
                name = '',
                initial_message = '',
                prompt = '',
                language = 'en',
                language_model = voiceos.models.open_ai.OpenAI(
                    provider = 'openai', 
                    model = null, 
                    functions = [
                        voiceos.models.open_ai_function.OpenAIFunction(
                            name = '', 
                            wait = True, 
                            description = '', 
                            parameters = null, )
                        ], ),
                voice = None,
                transcriber = None,
                max_call_duration = 56,
                webhooks = [
                    voiceos.models.webhook.Webhook(
                        event = null, 
                        url = '', 
                        method = null, 
                        headers = {
                            'key' : ''
                            }, 
                        filter = {
                            'key' : 56
                            }, )
                    ],
                id = '',
                uri = '',
                account_id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return AgentResponse(
                name = '',
                initial_message = '',
                prompt = '',
                id = '',
                uri = '',
                account_id = '',
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testAgentResponse(self):
        """Test AgentResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
