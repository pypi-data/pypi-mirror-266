# coding: utf-8

"""
    CryptoAPIs

    Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

    The version of the OpenAPI document: 2023-04-25
    Contact: developers@cryptoapis.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from com.cryptoapis.rest_apis.sdk.models.wallet_as_a_service_deposit_addresses_limit_reached import WalletAsAServiceDepositAddressesLimitReached

class TestWalletAsAServiceDepositAddressesLimitReached(unittest.TestCase):
    """WalletAsAServiceDepositAddressesLimitReached unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WalletAsAServiceDepositAddressesLimitReached:
        """Test WalletAsAServiceDepositAddressesLimitReached
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WalletAsAServiceDepositAddressesLimitReached`
        """
        model = WalletAsAServiceDepositAddressesLimitReached()
        if include_optional:
            return WalletAsAServiceDepositAddressesLimitReached(
                code = 'wallet_as_a_service_deposit_addresses_limit_reached',
                message = 'You have reached the maximum Deposit Addresses count which is currently {depositAddressesCount}. Please, upgrade your plan in order to have a higher Deposit Address count.',
                details = [
                    com.cryptoapis.rest_apis.sdk.models.banned_ip_address_details_inner.BannedIpAddress_details_inner(
                        attribute = 'attribute which content caused the error', 
                        message = 'message describing the error', )
                    ]
            )
        else:
            return WalletAsAServiceDepositAddressesLimitReached(
                code = 'wallet_as_a_service_deposit_addresses_limit_reached',
                message = 'You have reached the maximum Deposit Addresses count which is currently {depositAddressesCount}. Please, upgrade your plan in order to have a higher Deposit Address count.',
        )
        """

    def testWalletAsAServiceDepositAddressesLimitReached(self):
        """Test WalletAsAServiceDepositAddressesLimitReached"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
