# coding: utf-8

"""
    CryptoAPIs

    Crypto APIs is a complex and innovative infrastructure layer that radically simplifies the development of any Blockchain and Crypto related applications. Organized around REST, Crypto APIs can assist both novice Bitcoin/Ethereum enthusiasts and crypto experts with the development of their blockchain applications. Crypto APIs provides unified endpoints and data, raw data, automatic tokens and coins forwardings, callback functionalities, and much more.

    The version of the OpenAPI document: 2023-04-25
    Contact: developers@cryptoapis.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from com.cryptoapis.rest_apis.sdk.models.coins_forwarding_fail_data_item import CoinsForwardingFailDataItem

class TestCoinsForwardingFailDataItem(unittest.TestCase):
    """CoinsForwardingFailDataItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CoinsForwardingFailDataItem:
        """Test CoinsForwardingFailDataItem
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CoinsForwardingFailDataItem`
        """
        model = CoinsForwardingFailDataItem()
        if include_optional:
            return CoinsForwardingFailDataItem(
                blockchain = 'bitcoin',
                network = 'testnet',
                from_address = '38RTQQ8915tEmKFMjpPJPfrh9yV5HbJCRb',
                to_address = '1PkLrGoEGiGdmqNXX8daYNFvVVTjmWjc7m',
                trigger_transaction_id = '7e56c9cfaec36c77049ce5298bc153bb03b0b6b5dae760a62915617015f8e2a6',
                error_code = 'blockchain_data_address_not_found',
                error_message = 'Address not found'
            )
        else:
            return CoinsForwardingFailDataItem(
                blockchain = 'bitcoin',
                network = 'testnet',
                from_address = '38RTQQ8915tEmKFMjpPJPfrh9yV5HbJCRb',
                to_address = '1PkLrGoEGiGdmqNXX8daYNFvVVTjmWjc7m',
                trigger_transaction_id = '7e56c9cfaec36c77049ce5298bc153bb03b0b6b5dae760a62915617015f8e2a6',
                error_code = 'blockchain_data_address_not_found',
                error_message = 'Address not found',
        )
        """

    def testCoinsForwardingFailDataItem(self):
        """Test CoinsForwardingFailDataItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
