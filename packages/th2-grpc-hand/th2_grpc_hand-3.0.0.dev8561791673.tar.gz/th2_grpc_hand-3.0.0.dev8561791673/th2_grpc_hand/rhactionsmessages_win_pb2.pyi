"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file

Copyright 2020-2021 Exactpro (Exactpro Systems Limited)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class WinLocator(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATOR_FIELD_NUMBER: builtins.int
    MATCHER_FIELD_NUMBER: builtins.int
    MATCHERINDEX_FIELD_NUMBER: builtins.int
    locator: builtins.str
    matcher: builtins.str
    @property
    def matcherIndex(self) -> google.protobuf.wrappers_pb2.Int32Value: ...
    def __init__(
        self,
        *,
        locator: builtins.str = ...,
        matcher: builtins.str = ...,
        matcherIndex: google.protobuf.wrappers_pb2.Int32Value | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["matcherIndex", b"matcherIndex"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["locator", b"locator", "matcher", b"matcher", "matcherIndex", b"matcherIndex"]) -> None: ...

global___WinLocator = WinLocator

@typing_extensions.final
class BaseWinParams(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    EXECUTE_FIELD_NUMBER: builtins.int
    FROMROOT_FIELD_NUMBER: builtins.int
    EXPERIMENTALDRIVER_FIELD_NUMBER: builtins.int
    id: builtins.str
    execute: builtins.str
    fromRoot: builtins.bool
    experimentalDriver: builtins.bool
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        execute: builtins.str = ...,
        fromRoot: builtins.bool = ...,
        experimentalDriver: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["execute", b"execute", "experimentalDriver", b"experimentalDriver", "fromRoot", b"fromRoot", "id", b"id"]) -> None: ...

global___BaseWinParams = BaseWinParams

@typing_extensions.final
class WinOpen(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WORKDIR_FIELD_NUMBER: builtins.int
    APPFILE_FIELD_NUMBER: builtins.int
    APPARGS_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    workDir: builtins.str
    appFile: builtins.str
    appArgs: builtins.str
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        workDir: builtins.str = ...,
        appFile: builtins.str = ...,
        appArgs: builtins.str = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["appArgs", b"appArgs", "appFile", b"appFile", "baseParams", b"baseParams", "workDir", b"workDir"]) -> None: ...

global___WinOpen = WinOpen

@typing_extensions.final
class WinClick(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Button:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ButtonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[WinClick._Button.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        LEFT: WinClick._Button.ValueType  # 0
        RIGHT: WinClick._Button.ValueType  # 1
        MIDDLE: WinClick._Button.ValueType  # 2
        DOUBLE: WinClick._Button.ValueType  # 3

    class Button(_Button, metaclass=_ButtonEnumTypeWrapper): ...
    LEFT: WinClick.Button.ValueType  # 0
    RIGHT: WinClick.Button.ValueType  # 1
    MIDDLE: WinClick.Button.ValueType  # 2
    DOUBLE: WinClick.Button.ValueType  # 3

    class _AttachedBorder:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _AttachedBorderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[WinClick._AttachedBorder.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        NONE: WinClick._AttachedBorder.ValueType  # 0
        LEFT_TOP: WinClick._AttachedBorder.ValueType  # 1
        LEFT_BOTTOM: WinClick._AttachedBorder.ValueType  # 2
        RIGHT_TOP: WinClick._AttachedBorder.ValueType  # 3
        RIGHT_BOTTOM: WinClick._AttachedBorder.ValueType  # 4

    class AttachedBorder(_AttachedBorder, metaclass=_AttachedBorderEnumTypeWrapper): ...
    NONE: WinClick.AttachedBorder.ValueType  # 0
    LEFT_TOP: WinClick.AttachedBorder.ValueType  # 1
    LEFT_BOTTOM: WinClick.AttachedBorder.ValueType  # 2
    RIGHT_TOP: WinClick.AttachedBorder.ValueType  # 3
    RIGHT_BOTTOM: WinClick.AttachedBorder.ValueType  # 4

    LOCATORS_FIELD_NUMBER: builtins.int
    BUTTON_FIELD_NUMBER: builtins.int
    XOFFSET_FIELD_NUMBER: builtins.int
    YOFFSET_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    MODIFIERS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    button: global___WinClick.Button.ValueType
    xOffset: builtins.str
    yOffset: builtins.str
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    modifiers: builtins.str
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        button: global___WinClick.Button.ValueType = ...,
        xOffset: builtins.str = ...,
        yOffset: builtins.str = ...,
        baseParams: global___BaseWinParams | None = ...,
        modifiers: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "button", b"button", "locators", b"locators", "modifiers", b"modifiers", "xOffset", b"xOffset", "yOffset", b"yOffset"]) -> None: ...

global___WinClick = WinClick

@typing_extensions.final
class WinSendText(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATORS_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    CLEARBEFORE_FIELD_NUMBER: builtins.int
    ISDIRECTTEXT_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    text: builtins.str
    clearBefore: builtins.str
    isDirectText: builtins.str
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        text: builtins.str = ...,
        clearBefore: builtins.str = ...,
        isDirectText: builtins.str = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "clearBefore", b"clearBefore", "isDirectText", b"isDirectText", "locators", b"locators", "text", b"text"]) -> None: ...

global___WinSendText = WinSendText

@typing_extensions.final
class WinGetActiveWindow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WINDOWNAME_FIELD_NUMBER: builtins.int
    ACCESSIBILITYID_FIELD_NUMBER: builtins.int
    MAXTIMEOUT_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    windowName: builtins.str
    accessibilityId: builtins.str
    maxTimeout: builtins.int
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        windowName: builtins.str = ...,
        accessibilityId: builtins.str = ...,
        maxTimeout: builtins.int = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["accessibilityId", b"accessibilityId", "baseParams", b"baseParams", "maxTimeout", b"maxTimeout", "windowName", b"windowName"]) -> None: ...

global___WinGetActiveWindow = WinGetActiveWindow

@typing_extensions.final
class MaximizeMainWindow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> None: ...

global___MaximizeMainWindow = MaximizeMainWindow

@typing_extensions.final
class WinGetElementAttribute(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATORS_FIELD_NUMBER: builtins.int
    ATTRIBUTENAME_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    attributeName: builtins.str
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        attributeName: builtins.str = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attributeName", b"attributeName", "baseParams", b"baseParams", "locators", b"locators"]) -> None: ...

global___WinGetElementAttribute = WinGetElementAttribute

@typing_extensions.final
class WinWait(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MILLIS_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    millis: builtins.int
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        millis: builtins.int = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "millis", b"millis"]) -> None: ...

global___WinWait = WinWait

@typing_extensions.final
class WinToggleCheckBox(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATORS_FIELD_NUMBER: builtins.int
    EXPECTEDSTATE_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    expectedState: builtins.str
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        expectedState: builtins.str = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "expectedState", b"expectedState", "locators", b"locators"]) -> None: ...

global___WinToggleCheckBox = WinToggleCheckBox

@typing_extensions.final
class WinCheckElement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATORS_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    SAVEELEMENT_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    saveElement: builtins.bool
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        baseParams: global___BaseWinParams | None = ...,
        saveElement: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "locators", b"locators", "saveElement", b"saveElement"]) -> None: ...

global___WinCheckElement = WinCheckElement

@typing_extensions.final
class WinGetWindow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WINDOWNAME_FIELD_NUMBER: builtins.int
    ACCESSIBILITYID_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    windowName: builtins.str
    accessibilityId: builtins.str
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        windowName: builtins.str = ...,
        accessibilityId: builtins.str = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["accessibilityId", b"accessibilityId", "baseParams", b"baseParams", "windowName", b"windowName"]) -> None: ...

global___WinGetWindow = WinGetWindow

@typing_extensions.final
class WinSearchElement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATORS_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    MULTIPLEELEMENTS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    multipleElements: builtins.bool
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        baseParams: global___BaseWinParams | None = ...,
        multipleElements: builtins.bool = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "locators", b"locators", "multipleElements", b"multipleElements"]) -> None: ...

global___WinSearchElement = WinSearchElement

@typing_extensions.final
class WinWaitForAttribute(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATORS_FIELD_NUMBER: builtins.int
    ATTRIBUTENAME_FIELD_NUMBER: builtins.int
    EXPECTEDVALUE_FIELD_NUMBER: builtins.int
    MAXTIMEOUT_FIELD_NUMBER: builtins.int
    CHECKINTERVAL_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    attributeName: builtins.str
    expectedValue: builtins.str
    maxTimeout: builtins.str
    checkInterval: builtins.str
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        attributeName: builtins.str = ...,
        expectedValue: builtins.str = ...,
        maxTimeout: builtins.str = ...,
        checkInterval: builtins.str = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attributeName", b"attributeName", "baseParams", b"baseParams", "checkInterval", b"checkInterval", "expectedValue", b"expectedValue", "locators", b"locators", "maxTimeout", b"maxTimeout"]) -> None: ...

global___WinWaitForAttribute = WinWaitForAttribute

@typing_extensions.final
class WinScrollUsingText(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATORS_FIELD_NUMBER: builtins.int
    TEXTTOSEND_FIELD_NUMBER: builtins.int
    MAXITERATIONS_FIELD_NUMBER: builtins.int
    TEXTLOCATORS_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    textToSend: builtins.str
    maxIterations: builtins.str
    @property
    def textLocators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        textToSend: builtins.str = ...,
        maxIterations: builtins.str = ...,
        textLocators: collections.abc.Iterable[global___WinLocator] | None = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "locators", b"locators", "maxIterations", b"maxIterations", "textLocators", b"textLocators", "textToSend", b"textToSend"]) -> None: ...

global___WinScrollUsingText = WinScrollUsingText

@typing_extensions.final
class WinGetDataFromClipboard(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> None: ...

global___WinGetDataFromClipboard = WinGetDataFromClipboard

@typing_extensions.final
class WinTableClick(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATORS_FIELD_NUMBER: builtins.int
    SEARCHPARAMS_FIELD_NUMBER: builtins.int
    TARGETCOLUMN_FIELD_NUMBER: builtins.int
    COLUMNINDEX_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    searchParams: builtins.str
    targetColumn: builtins.str
    columnIndex: builtins.str
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        searchParams: builtins.str = ...,
        targetColumn: builtins.str = ...,
        columnIndex: builtins.str = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "columnIndex", b"columnIndex", "locators", b"locators", "searchParams", b"searchParams", "targetColumn", b"targetColumn"]) -> None: ...

global___WinTableClick = WinTableClick

@typing_extensions.final
class WinTableSearch(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATORS_FIELD_NUMBER: builtins.int
    SEARCHPARAMS_FIELD_NUMBER: builtins.int
    TARGETCOLUMN_FIELD_NUMBER: builtins.int
    COLUMNINDEX_FIELD_NUMBER: builtins.int
    FIRSTROWINDEX_FIELD_NUMBER: builtins.int
    ROWNAMEFORMAT_FIELD_NUMBER: builtins.int
    ROWELEMENTNAMEFORMAT_FIELD_NUMBER: builtins.int
    ROWELEMENTVALUEFORMAT_FIELD_NUMBER: builtins.int
    SAVERESULT_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    searchParams: builtins.str
    targetColumn: builtins.str
    columnIndex: builtins.str
    firstRowIndex: builtins.str
    rowNameFormat: builtins.str
    rowElementNameFormat: builtins.str
    rowElementValueFormat: builtins.str
    saveResult: builtins.str
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        searchParams: builtins.str = ...,
        targetColumn: builtins.str = ...,
        columnIndex: builtins.str = ...,
        firstRowIndex: builtins.str = ...,
        rowNameFormat: builtins.str = ...,
        rowElementNameFormat: builtins.str = ...,
        rowElementValueFormat: builtins.str = ...,
        saveResult: builtins.str = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "columnIndex", b"columnIndex", "firstRowIndex", b"firstRowIndex", "locators", b"locators", "rowElementNameFormat", b"rowElementNameFormat", "rowElementValueFormat", b"rowElementValueFormat", "rowNameFormat", b"rowNameFormat", "saveResult", b"saveResult", "searchParams", b"searchParams", "targetColumn", b"targetColumn"]) -> None: ...

global___WinTableSearch = WinTableSearch

@typing_extensions.final
class WinWaitForElement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATORS_FIELD_NUMBER: builtins.int
    TIMEOUT_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    timeout: builtins.str
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        timeout: builtins.str = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "locators", b"locators", "timeout", b"timeout"]) -> None: ...

global___WinWaitForElement = WinWaitForElement

@typing_extensions.final
class WinGetScreenshot(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATORS_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "locators", b"locators"]) -> None: ...

global___WinGetScreenshot = WinGetScreenshot

@typing_extensions.final
class WinTakeScreenshot(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATORS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    name: builtins.str
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        name: builtins.str = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "locators", b"locators", "name", b"name"]) -> None: ...

global___WinTakeScreenshot = WinTakeScreenshot

@typing_extensions.final
class WinRestartDriver(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> None: ...

global___WinRestartDriver = WinRestartDriver

@typing_extensions.final
class WinGetElementColor(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATORS_FIELD_NUMBER: builtins.int
    XOFFSET_FIELD_NUMBER: builtins.int
    YOFFSET_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    xOffset: builtins.str
    yOffset: builtins.str
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        xOffset: builtins.str = ...,
        yOffset: builtins.str = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "locators", b"locators", "xOffset", b"xOffset", "yOffset", b"yOffset"]) -> None: ...

global___WinGetElementColor = WinGetElementColor

@typing_extensions.final
class WinDragAndDrop(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FROMLOCATORS_FIELD_NUMBER: builtins.int
    TOLOCATORS_FIELD_NUMBER: builtins.int
    FROMOFFSETX_FIELD_NUMBER: builtins.int
    FROMOFFSETY_FIELD_NUMBER: builtins.int
    TOOFFSETX_FIELD_NUMBER: builtins.int
    TOOFFSETY_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def fromLocators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    @property
    def toLocators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    fromOffsetX: builtins.str
    fromOffsetY: builtins.str
    toOffsetX: builtins.str
    toOffsetY: builtins.str
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        fromLocators: collections.abc.Iterable[global___WinLocator] | None = ...,
        toLocators: collections.abc.Iterable[global___WinLocator] | None = ...,
        fromOffsetX: builtins.str = ...,
        fromOffsetY: builtins.str = ...,
        toOffsetX: builtins.str = ...,
        toOffsetY: builtins.str = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "fromLocators", b"fromLocators", "fromOffsetX", b"fromOffsetX", "fromOffsetY", b"fromOffsetY", "toLocators", b"toLocators", "toOffsetX", b"toOffsetX", "toOffsetY", b"toOffsetY"]) -> None: ...

global___WinDragAndDrop = WinDragAndDrop

@typing_extensions.final
class WinScrollToElement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _ScrollType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ScrollTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[WinScrollToElement._ScrollType.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CLICK: WinScrollToElement._ScrollType.ValueType  # 0
        TEXT: WinScrollToElement._ScrollType.ValueType  # 1

    class ScrollType(_ScrollType, metaclass=_ScrollTypeEnumTypeWrapper): ...
    CLICK: WinScrollToElement.ScrollType.ValueType  # 0
    TEXT: WinScrollToElement.ScrollType.ValueType  # 1

    ELEMENTLOCATORS_FIELD_NUMBER: builtins.int
    ACTIONLOCATORS_FIELD_NUMBER: builtins.int
    ISELEMENTINTREE_FIELD_NUMBER: builtins.int
    ISELEMENTSHOULDBEDISPLAYED_FIELD_NUMBER: builtins.int
    SCROLLTYPE_FIELD_NUMBER: builtins.int
    MAXITERATIONS_FIELD_NUMBER: builtins.int
    CLICKOFFSETX_FIELD_NUMBER: builtins.int
    CLICKOFFSETY_FIELD_NUMBER: builtins.int
    TEXTTOSEND_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def elementLocators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    @property
    def actionLocators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    isElementInTree: builtins.bool
    isElementShouldBeDisplayed: builtins.bool
    scrollType: global___WinScrollToElement.ScrollType.ValueType
    maxIterations: builtins.int
    clickOffsetX: builtins.str
    clickOffsetY: builtins.str
    textToSend: builtins.str
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(
        self,
        *,
        elementLocators: collections.abc.Iterable[global___WinLocator] | None = ...,
        actionLocators: collections.abc.Iterable[global___WinLocator] | None = ...,
        isElementInTree: builtins.bool = ...,
        isElementShouldBeDisplayed: builtins.bool = ...,
        scrollType: global___WinScrollToElement.ScrollType.ValueType = ...,
        maxIterations: builtins.int = ...,
        clickOffsetX: builtins.str = ...,
        clickOffsetY: builtins.str = ...,
        textToSend: builtins.str = ...,
        baseParams: global___BaseWinParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["actionLocators", b"actionLocators", "baseParams", b"baseParams", "clickOffsetX", b"clickOffsetX", "clickOffsetY", b"clickOffsetY", "elementLocators", b"elementLocators", "isElementInTree", b"isElementInTree", "isElementShouldBeDisplayed", b"isElementShouldBeDisplayed", "maxIterations", b"maxIterations", "scrollType", b"scrollType", "textToSend", b"textToSend"]) -> None: ...

global___WinScrollToElement = WinScrollToElement

@typing_extensions.final
class WinColorsCollector(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LOCATORS_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    STARTXOFFSET_FIELD_NUMBER: builtins.int
    STARTYOFFSET_FIELD_NUMBER: builtins.int
    ENDXOFFSET_FIELD_NUMBER: builtins.int
    ENDYOFFSET_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    startXOffset: builtins.str
    startYOffset: builtins.str
    endXOffset: builtins.str
    endYOffset: builtins.str
    def __init__(
        self,
        *,
        locators: collections.abc.Iterable[global___WinLocator] | None = ...,
        baseParams: global___BaseWinParams | None = ...,
        startXOffset: builtins.str = ...,
        startYOffset: builtins.str = ...,
        endXOffset: builtins.str = ...,
        endYOffset: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams", b"baseParams", "endXOffset", b"endXOffset", "endYOffset", b"endYOffset", "locators", b"locators", "startXOffset", b"startXOffset", "startYOffset", b"startYOffset"]) -> None: ...

global___WinColorsCollector = WinColorsCollector

@typing_extensions.final
class RhWinActionList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WINACTIONLIST_FIELD_NUMBER: builtins.int
    @property
    def winActionList(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RhWinActions]: ...
    def __init__(
        self,
        *,
        winActionList: collections.abc.Iterable[global___RhWinActions] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["winActionList", b"winActionList"]) -> None: ...

global___RhWinActionList = RhWinActionList

@typing_extensions.final
class RhWinActions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WINOPEN_FIELD_NUMBER: builtins.int
    WINCLICK_FIELD_NUMBER: builtins.int
    WINSENDTEXT_FIELD_NUMBER: builtins.int
    WINGETACTIVEWINDOW_FIELD_NUMBER: builtins.int
    WINGETELEMENTATTRIBUTE_FIELD_NUMBER: builtins.int
    WINWAIT_FIELD_NUMBER: builtins.int
    WINTOGGLECHECKBOX_FIELD_NUMBER: builtins.int
    WINCHECKELEMENT_FIELD_NUMBER: builtins.int
    WINGETWINDOW_FIELD_NUMBER: builtins.int
    WINSEARCHELEMENT_FIELD_NUMBER: builtins.int
    WINWAITFORATTRIBUTE_FIELD_NUMBER: builtins.int
    WINSCROLLUSINGTEXT_FIELD_NUMBER: builtins.int
    WINGETDATAFROMCLIPBOARD_FIELD_NUMBER: builtins.int
    WINWAITFORELEMENT_FIELD_NUMBER: builtins.int
    WINTABLESEARCH_FIELD_NUMBER: builtins.int
    WINMAXIMIZEMAINWINDOW_FIELD_NUMBER: builtins.int
    WINGETSCREENSHOT_FIELD_NUMBER: builtins.int
    WINGETELEMENTCOLOR_FIELD_NUMBER: builtins.int
    WINDRAGANDDROP_FIELD_NUMBER: builtins.int
    WINSCROLLTOELEMENT_FIELD_NUMBER: builtins.int
    WINRESTARTDRIVER_FIELD_NUMBER: builtins.int
    WINCOLORSCOLLECTOR_FIELD_NUMBER: builtins.int
    WINTAKESCREENSHOT_FIELD_NUMBER: builtins.int
    @property
    def winOpen(self) -> global___WinOpen: ...
    @property
    def winClick(self) -> global___WinClick: ...
    @property
    def winSendText(self) -> global___WinSendText: ...
    @property
    def winGetActiveWindow(self) -> global___WinGetActiveWindow: ...
    @property
    def winGetElementAttribute(self) -> global___WinGetElementAttribute: ...
    @property
    def winWait(self) -> global___WinWait: ...
    @property
    def winToggleCheckBox(self) -> global___WinToggleCheckBox: ...
    @property
    def winCheckElement(self) -> global___WinCheckElement: ...
    @property
    def winGetWindow(self) -> global___WinGetWindow: ...
    @property
    def winSearchElement(self) -> global___WinSearchElement: ...
    @property
    def winWaitForAttribute(self) -> global___WinWaitForAttribute: ...
    @property
    def winScrollUsingText(self) -> global___WinScrollUsingText: ...
    @property
    def winGetDataFromClipboard(self) -> global___WinGetDataFromClipboard: ...
    @property
    def winWaitForElement(self) -> global___WinWaitForElement: ...
    @property
    def winTableSearch(self) -> global___WinTableSearch: ...
    @property
    def winMaximizeMainWindow(self) -> global___MaximizeMainWindow: ...
    @property
    def winGetScreenshot(self) -> global___WinGetScreenshot: ...
    @property
    def winGetElementColor(self) -> global___WinGetElementColor: ...
    @property
    def winDragAndDrop(self) -> global___WinDragAndDrop: ...
    @property
    def winScrollToElement(self) -> global___WinScrollToElement: ...
    @property
    def winRestartDriver(self) -> global___WinRestartDriver: ...
    @property
    def winColorsCollector(self) -> global___WinColorsCollector: ...
    @property
    def winTakeScreenshot(self) -> global___WinTakeScreenshot: ...
    def __init__(
        self,
        *,
        winOpen: global___WinOpen | None = ...,
        winClick: global___WinClick | None = ...,
        winSendText: global___WinSendText | None = ...,
        winGetActiveWindow: global___WinGetActiveWindow | None = ...,
        winGetElementAttribute: global___WinGetElementAttribute | None = ...,
        winWait: global___WinWait | None = ...,
        winToggleCheckBox: global___WinToggleCheckBox | None = ...,
        winCheckElement: global___WinCheckElement | None = ...,
        winGetWindow: global___WinGetWindow | None = ...,
        winSearchElement: global___WinSearchElement | None = ...,
        winWaitForAttribute: global___WinWaitForAttribute | None = ...,
        winScrollUsingText: global___WinScrollUsingText | None = ...,
        winGetDataFromClipboard: global___WinGetDataFromClipboard | None = ...,
        winWaitForElement: global___WinWaitForElement | None = ...,
        winTableSearch: global___WinTableSearch | None = ...,
        winMaximizeMainWindow: global___MaximizeMainWindow | None = ...,
        winGetScreenshot: global___WinGetScreenshot | None = ...,
        winGetElementColor: global___WinGetElementColor | None = ...,
        winDragAndDrop: global___WinDragAndDrop | None = ...,
        winScrollToElement: global___WinScrollToElement | None = ...,
        winRestartDriver: global___WinRestartDriver | None = ...,
        winColorsCollector: global___WinColorsCollector | None = ...,
        winTakeScreenshot: global___WinTakeScreenshot | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["action", b"action", "winCheckElement", b"winCheckElement", "winClick", b"winClick", "winColorsCollector", b"winColorsCollector", "winDragAndDrop", b"winDragAndDrop", "winGetActiveWindow", b"winGetActiveWindow", "winGetDataFromClipboard", b"winGetDataFromClipboard", "winGetElementAttribute", b"winGetElementAttribute", "winGetElementColor", b"winGetElementColor", "winGetScreenshot", b"winGetScreenshot", "winGetWindow", b"winGetWindow", "winMaximizeMainWindow", b"winMaximizeMainWindow", "winOpen", b"winOpen", "winRestartDriver", b"winRestartDriver", "winScrollToElement", b"winScrollToElement", "winScrollUsingText", b"winScrollUsingText", "winSearchElement", b"winSearchElement", "winSendText", b"winSendText", "winTableSearch", b"winTableSearch", "winTakeScreenshot", b"winTakeScreenshot", "winToggleCheckBox", b"winToggleCheckBox", "winWait", b"winWait", "winWaitForAttribute", b"winWaitForAttribute", "winWaitForElement", b"winWaitForElement"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action", b"action", "winCheckElement", b"winCheckElement", "winClick", b"winClick", "winColorsCollector", b"winColorsCollector", "winDragAndDrop", b"winDragAndDrop", "winGetActiveWindow", b"winGetActiveWindow", "winGetDataFromClipboard", b"winGetDataFromClipboard", "winGetElementAttribute", b"winGetElementAttribute", "winGetElementColor", b"winGetElementColor", "winGetScreenshot", b"winGetScreenshot", "winGetWindow", b"winGetWindow", "winMaximizeMainWindow", b"winMaximizeMainWindow", "winOpen", b"winOpen", "winRestartDriver", b"winRestartDriver", "winScrollToElement", b"winScrollToElement", "winScrollUsingText", b"winScrollUsingText", "winSearchElement", b"winSearchElement", "winSendText", b"winSendText", "winTableSearch", b"winTableSearch", "winTakeScreenshot", b"winTakeScreenshot", "winToggleCheckBox", b"winToggleCheckBox", "winWait", b"winWait", "winWaitForAttribute", b"winWaitForAttribute", "winWaitForElement", b"winWaitForElement"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["action", b"action"]) -> typing_extensions.Literal["winOpen", "winClick", "winSendText", "winGetActiveWindow", "winGetElementAttribute", "winWait", "winToggleCheckBox", "winCheckElement", "winGetWindow", "winSearchElement", "winWaitForAttribute", "winScrollUsingText", "winGetDataFromClipboard", "winWaitForElement", "winTableSearch", "winMaximizeMainWindow", "winGetScreenshot", "winGetElementColor", "winDragAndDrop", "winScrollToElement", "winRestartDriver", "winColorsCollector", "winTakeScreenshot"] | None: ...

global___RhWinActions = RhWinActions
