# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/asto',
                'doc_host': 'https://dsm-72.github.io',
                'git_url': 'https://github.com/dsm-72/asto',
                'lib_path': 'asto'},
  'syms': { 'asto.arng': { 'asto.arng._safe_idx': ('arng.html#_safe_idx', 'asto/arng.py'),
                           'asto.arng._safe_len': ('arng.html#_safe_len', 'asto/arng.py'),
                           'asto.arng.arange': ('arng.html#arange', 'asto/arng.py'),
                           'asto.arng.arngchain': ('arng.html#arngchain', 'asto/arng.py'),
                           'asto.arng.arr2arng': ('arng.html#arr2arng', 'asto/arng.py'),
                           'asto.arng.asarng': ('arng.html#asarng', 'asto/arng.py'),
                           'asto.arng.df2arng': ('arng.html#df2arng', 'asto/arng.py'),
                           'asto.arng.isarng': ('arng.html#isarng', 'asto/arng.py'),
                           'asto.arng.try2arng': ('arng.html#try2arng', 'asto/arng.py')},
            'asto.arrs': { 'asto.arrs.ann2arr': ('arrs.html#ann2arr', 'asto/arrs.py'),
                           'asto.arrs.arrchain': ('arrs.html#arrchain', 'asto/arrs.py'),
                           'asto.arrs.as01': ('arrs.html#as01', 'asto/arrs.py'),
                           'asto.arrs.asarr': ('arrs.html#asarr', 'asto/arrs.py'),
                           'asto.arrs.asnp': ('arrs.html#asnp', 'asto/arrs.py'),
                           'asto.arrs.clone': ('arrs.html#clone', 'asto/arrs.py'),
                           'asto.arrs.cpu': ('arrs.html#cpu', 'asto/arrs.py'),
                           'asto.arrs.detach': ('arrs.html#detach', 'asto/arrs.py'),
                           'asto.arrs.dns2arr': ('arrs.html#dns2arr', 'asto/arrs.py'),
                           'asto.arrs.mth2arr': ('arrs.html#mth2arr', 'asto/arrs.py'),
                           'asto.arrs.mtx2arr': ('arrs.html#mtx2arr', 'asto/arrs.py'),
                           'asto.arrs.ndarray': ('arrs.html#ndarray', 'asto/arrs.py'),
                           'asto.arrs.numpy': ('arrs.html#numpy', 'asto/arrs.py'),
                           'asto.arrs.obj2arr': ('arrs.html#obj2arr', 'asto/arrs.py'),
                           'asto.arrs.spr2arr': ('arrs.html#spr2arr', 'asto/arrs.py'),
                           'asto.arrs.toarray': ('arrs.html#toarray', 'asto/arrs.py'),
                           'asto.arrs.todense': ('arrs.html#todense', 'asto/arrs.py'),
                           'asto.arrs.tolist': ('arrs.html#tolist', 'asto/arrs.py'),
                           'asto.arrs.trc2arr': ('arrs.html#trc2arr', 'asto/arrs.py'),
                           'asto.arrs.try2arr': ('arrs.html#try2arr', 'asto/arrs.py')},
            'asto.atyp': {},
            'asto.bend': { 'asto.bend.backend': ('bend.html#backend', 'asto/bend.py'),
                           'asto.bend.getbackend': ('bend.html#getbackend', 'asto/bend.py'),
                           'asto.bend.hasbackend': ('bend.html#hasbackend', 'asto/bend.py'),
                           'asto.bend.hascuda': ('bend.html#hascuda', 'asto/bend.py'),
                           'asto.bend.hasmps': ('bend.html#hasmps', 'asto/bend.py'),
                           'asto.bend.isavail': ('bend.html#isavail', 'asto/bend.py'),
                           'asto.bend.isbuilt': ('bend.html#isbuilt', 'asto/bend.py')},
            'asto.cast': { 'asto.cast.cast': ('cast.html#cast', 'asto/cast.py'),
                           'asto.cast.caster': ('cast.html#caster', 'asto/cast.py'),
                           'asto.cast.trycast': ('cast.html#trycast', 'asto/cast.py')},
            'asto.chns': { 'asto.chns._flip_channels_format': ('chns.html#_flip_channels_format', 'asto/chns.py'),
                           'asto.chns._guess_channels_index': ('chns.html#_guess_channels_index', 'asto/chns.py'),
                           'asto.chns._match_channels_format_string': ('chns.html#_match_channels_format_string', 'asto/chns.py'),
                           'asto.chns._match_channels_format_tuple': ('chns.html#_match_channels_format_tuple', 'asto/chns.py'),
                           'asto.chns.as_channels_format': ('chns.html#as_channels_format', 'asto/chns.py'),
                           'asto.chns.ascfmt': ('chns.html#ascfmt', 'asto/chns.py'),
                           'asto.chns.aschannels': ('chns.html#aschannels', 'asto/chns.py'),
                           'asto.chns.aschnfmt': ('chns.html#aschnfmt', 'asto/chns.py'),
                           'asto.chns.aschns': ('chns.html#aschns', 'asto/chns.py'),
                           'asto.chns.channels_resize': ('chns.html#channels_resize', 'asto/chns.py'),
                           'asto.chns.format_channels': ('chns.html#format_channels', 'asto/chns.py'),
                           'asto.chns.match_channels_format': ('chns.html#match_channels_format', 'asto/chns.py'),
                           'asto.chns.to_channels_format': ('chns.html#to_channels_format', 'asto/chns.py')},
            'asto.cons': {},
            'asto.dict': {},
            'asto.nums': { 'asto.nums.ascomplex': ('nums.html#ascomplex', 'asto/nums.py'),
                           'asto.nums.asfloat': ('nums.html#asfloat', 'asto/nums.py'),
                           'asto.nums.asint': ('nums.html#asint', 'asto/nums.py'),
                           'asto.nums.asnum': ('nums.html#asnum', 'asto/nums.py')},
            'asto.path': { 'asto.path.aspath': ('path.html#aspath', 'asto/path.py'),
                           'asto.path.path2str': ('path.html#path2str', 'asto/path.py'),
                           'asto.path.pathchain': ('path.html#pathchain', 'asto/path.py'),
                           'asto.path.try2path': ('path.html#try2path', 'asto/path.py')},
            'asto.sets': { 'asto.sets.any2set': ('sets.html#any2set', 'asto/sets.py'),
                           'asto.sets.asset': ('sets.html#asset', 'asto/sets.py'),
                           'asto.sets.setchain': ('sets.html#setchain', 'asto/sets.py'),
                           'asto.sets.try2set': ('sets.html#try2set', 'asto/sets.py')},
            'asto.slcs': { 'asto.slcs.asslc': ('slcs.html#asslc', 'asto/slcs.py'),
                           'asto.slcs.asslcfmt': ('slcs.html#asslcfmt', 'asto/slcs.py'),
                           'asto.slcs.asslcs': ('slcs.html#asslcs', 'asto/slcs.py'),
                           'asto.slcs.asslice': ('slcs.html#asslice', 'asto/slcs.py'),
                           'asto.slcs.flip_slice_format': ('slcs.html#flip_slice_format', 'asto/slcs.py'),
                           'asto.slcs.format_slice': ('slcs.html#format_slice', 'asto/slcs.py'),
                           'asto.slcs.guess_slice_format': ('slcs.html#guess_slice_format', 'asto/slcs.py'),
                           'asto.slcs.make_slices': ('slcs.html#make_slices', 'asto/slcs.py'),
                           'asto.slcs.makeslc': ('slcs.html#makeslc', 'asto/slcs.py'),
                           'asto.slcs.makeslcs': ('slcs.html#makeslcs', 'asto/slcs.py'),
                           'asto.slcs.makeslice': ('slcs.html#makeslice', 'asto/slcs.py'),
                           'asto.slcs.match_slice_format': ('slcs.html#match_slice_format', 'asto/slcs.py'),
                           'asto.slcs.safeslice': ('slcs.html#safeslice', 'asto/slcs.py'),
                           'asto.slcs.sdim': ('slcs.html#sdim', 'asto/slcs.py'),
                           'asto.slcs.slcchain': ('slcs.html#slcchain', 'asto/slcs.py'),
                           'asto.slcs.slice2list': ('slcs.html#slice2list', 'asto/slcs.py'),
                           'asto.slcs.slice_dimensions': ('slcs.html#slice_dimensions', 'asto/slcs.py'),
                           'asto.slcs.slice_dims': ('slcs.html#slice_dims', 'asto/slcs.py'),
                           'asto.slcs.tocoordformat': ('slcs.html#tocoordformat', 'asto/slcs.py'),
                           'asto.slcs.tosliceformat': ('slcs.html#tosliceformat', 'asto/slcs.py'),
                           'asto.slcs.try2slc': ('slcs.html#try2slc', 'asto/slcs.py'),
                           'asto.slcs.trysfmt': ('slcs.html#trysfmt', 'asto/slcs.py')},
            'asto.tens': { 'asto.tens._dev_in_sig': ('tens.html#_dev_in_sig', 'asto/tens.py'),
                           'asto.tens.asdev': ('tens.html#asdev', 'asto/tens.py'),
                           'asto.tens.asnans': ('tens.html#asnans', 'asto/tens.py'),
                           'asto.tens.assize': ('tens.html#assize', 'asto/tens.py'),
                           'asto.tens.asten': ('tens.html#asten', 'asto/tens.py'),
                           'asto.tens.devchain': ('tens.html#devchain', 'asto/tens.py'),
                           'asto.tens.dtypechain': ('tens.html#dtypechain', 'asto/tens.py'),
                           'asto.tens.gettype': ('tens.html#gettype', 'asto/tens.py'),
                           'asto.tens.mpsdtype': ('tens.html#mpsdtype', 'asto/tens.py'),
                           'asto.tens.nanslike': ('tens.html#nanslike', 'asto/tens.py'),
                           'asto.tens.ptdevice': ('tens.html#ptdevice', 'asto/tens.py'),
                           'asto.tens.pttensor': ('tens.html#pttensor', 'asto/tens.py'),
                           'asto.tens.resize': ('tens.html#resize', 'asto/tens.py'),
                           'asto.tens.resize_tensor': ('tens.html#resize_tensor', 'asto/tens.py'),
                           'asto.tens.ten2cpu': ('tens.html#ten2cpu', 'asto/tens.py'),
                           'asto.tens.ten2cuda': ('tens.html#ten2cuda', 'asto/tens.py'),
                           'asto.tens.ten2mps': ('tens.html#ten2mps', 'asto/tens.py'),
                           'asto.tens.tenchain': ('tens.html#tenchain', 'asto/tens.py'),
                           'asto.tens.to': ('tens.html#to', 'asto/tens.py'),
                           'asto.tens.torchnans': ('tens.html#torchnans', 'asto/tens.py'),
                           'asto.tens.torchtype': ('tens.html#torchtype', 'asto/tens.py'),
                           'asto.tens.totorch': ('tens.html#totorch', 'asto/tens.py'),
                           'asto.tens.try2dev': ('tens.html#try2dev', 'asto/tens.py'),
                           'asto.tens.try2dtype': ('tens.html#try2dtype', 'asto/tens.py'),
                           'asto.tens.try2move': ('tens.html#try2move', 'asto/tens.py'),
                           'asto.tens.try2ten': ('tens.html#try2ten', 'asto/tens.py')},
            'asto.time': { 'asto.time.day2hours': ('time.html#day2hours', 'asto/time.py'),
                           'asto.time.day2hrs': ('time.html#day2hrs', 'asto/time.py')}}}
