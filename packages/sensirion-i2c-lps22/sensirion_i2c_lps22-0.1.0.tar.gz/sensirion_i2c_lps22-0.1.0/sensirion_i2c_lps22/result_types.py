#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# (c) Copyright 2023 Sensirion AG, Switzerland
#
#     THIS FILE IS AUTOMATICALLY GENERATED!
#
# Generator:     sensirion-driver-generator 0.33.0
# Product:       lps22
# Model-Version: 1.0.1
#
"""
The signal classes specify transformations of the raw sensor signals into a meaningful units.
The generated signal types are used by the driver class and not intended for direct use.
"""

from sensirion_driver_support_types.signals import AbstractSignal


class SignalPressure(AbstractSignal):
    """measured pressure in hPa"""

    def __init__(self, raw_pressure):
        self._pressure = int.from_bytes(raw_pressure, byteorder='little', signed=True) / 4096

    @property
    def value(self):
        return self._pressure

    def __str__(self):
        return '{0:.2f}'.format(self.value)


class SignalTemperature(AbstractSignal):
    """measured temperature in degC"""

    def __init__(self, raw_temperature):
        self._temperature = int.from_bytes(raw_temperature, byteorder='little', signed=True) / 100

    @property
    def value(self):
        return self._temperature

    def __str__(self):
        return '{0:.2f}'.format(self.value)

