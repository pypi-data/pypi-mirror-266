# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.datetime_utils import serialize_datetime
from .credential_id import CredentialId
from .credential_issuer import CredentialIssuer
from .credential_subject import CredentialSubject
from .credential_type import CredentialType
from .credential_valid_from import CredentialValidFrom
from .credential_valid_until import CredentialValidUntil
from .credentil_holder import CredentilHolder

try:
    import pydantic.v1 as pydantic  # type: ignore
except ImportError:
    import pydantic  # type: ignore


class Credential20(pydantic.BaseModel):
    """
    VC2.0 specific properties.
    """

    type: typing.Optional[CredentialType] = None
    holder: typing.Optional[CredentilHolder] = None
    id: typing.Optional[CredentialId] = None
    issuer: typing.Optional[CredentialIssuer] = None
    subject: typing.Optional[CredentialSubject] = None
    valid_from: typing.Optional[CredentialValidFrom] = pydantic.Field(alias="validFrom", default=None)
    valid_until: typing.Optional[CredentialValidUntil] = pydantic.Field(alias="validUntil", default=None)

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        smart_union = True
        allow_population_by_field_name = True
        extra = pydantic.Extra.allow
        json_encoders = {dt.datetime: serialize_datetime}
