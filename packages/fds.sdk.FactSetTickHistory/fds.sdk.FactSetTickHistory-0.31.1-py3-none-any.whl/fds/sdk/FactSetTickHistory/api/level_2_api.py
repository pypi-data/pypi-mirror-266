"""
    Tick History

    Tick History provides dynamic access to historical tick data for a specific security for specific dates or date range.  # noqa: E501

    The version of the OpenAPI document: 2.1.0
    Contact: api@factset.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401
from multiprocessing.pool import ApplyResult
import typing

from fds.sdk.FactSetTickHistory.api_client import ApiClient, Endpoint as _Endpoint
from fds.sdk.FactSetTickHistory.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from fds.sdk.FactSetTickHistory.exceptions import ApiException
from fds.sdk.FactSetTickHistory.model.completed_response import CompletedResponse
from fds.sdk.FactSetTickHistory.model.level_two_request import LevelTwoRequest
from fds.sdk.FactSetTickHistory.model.leveltwo_get_files_response import LeveltwoGetFilesResponse
from fds.sdk.FactSetTickHistory.model.status import Status
from fds.sdk.FactSetTickHistory.model.submitted_response import SubmittedResponse



class GetLevel2FileStatusResponseWrapper:
    def __init__(self, status_code: int, response: object):
        """
        This constructor initializes the new GetLevel2FileStatusResponseWrapper
        to status_code, response

        Args:
            response (object): Raw response
            status_code (int): Http status code of the response
        """

        self.status_code = status_code
        self.response = response

    def get_status_code(self) -> int:
        """
        Returns: Http status code of the response
        """
        return self.status_code

    def get_response(self) -> object:
        """
        Returns: Raw Object response
        """
        return self.response

    def get_response_201(self) -> CompletedResponse:
        """
        Raises: ApiException: Invalid response getter called.

        Returns: The Request has been created and the response has been created. 
        """
        if self.status_code != 201:
            raise ApiException(
                status=500,
                reason="Invalid response getter called. get_response_201 can't return a " + self.status_code + " response"
            )
        return self.response

    def get_response_202(self) -> SubmittedResponse:
        """
        Raises: ApiException: Invalid response getter called.

        Returns: The Request has not finished and the result has NOT been created. 
        """
        if self.status_code != 202:
            raise ApiException(
                status=500,
                reason="Invalid response getter called. get_response_202 can't return a " + self.status_code + " response"
            )
        return self.response


class GetTickHistoryLevel2FilesResponseWrapper:
    def __init__(self, status_code: int, response: object):
        """
        This constructor initializes the new GetTickHistoryLevel2FilesResponseWrapper
        to status_code, response

        Args:
            response (object): Raw response
            status_code (int): Http status code of the response
        """

        self.status_code = status_code
        self.response = response

    def get_status_code(self) -> int:
        """
        Returns: Http status code of the response
        """
        return self.status_code

    def get_response(self) -> object:
        """
        Returns: Raw Object response
        """
        return self.response

    def get_response_200(self) -> LeveltwoGetFilesResponse:
        """
        Raises: ApiException: Invalid response getter called.

        Returns: Success&lt;/p&gt; **To download the output file copy the response url in a browser**
        """
        if self.status_code != 200:
            raise ApiException(
                status=500,
                reason="Invalid response getter called. get_response_200 can't return a " + self.status_code + " response"
            )
        return self.response

    def get_response_202(self) -> SubmittedResponse:
        """
        Raises: ApiException: Invalid response getter called.

        Returns:  The Request has not finished and the result has NOT been created. 
        """
        if self.status_code != 202:
            raise ApiException(
                status=500,
                reason="Invalid response getter called. get_response_202 can't return a " + self.status_code + " response"
            )
        return self.response




class Level2Api(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        self.get_level2_file_status_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 201: (CompletedResponse,), 202: (SubmittedResponse,), 401: (Status,), 403: (Status,), 404: (Status,), 500: (Status,),  },
                  GetLevel2FileStatusResponseWrapper
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/level2/files/status',
                'operation_id': 'get_level2_file_status',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                },
                'location_map': {
                    'id': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.get_tick_history_level2_files_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 200: (LeveltwoGetFilesResponse,), 202: (SubmittedResponse,), 400: (Status,), 401: (Status,), 403: (Status,), 404: (Status,), 500: (Status,),  },
                  GetTickHistoryLevel2FilesResponseWrapper
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/level2/files/get',
                'operation_id': 'get_tick_history_level2_files',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'pagination_limit',
                    'pagination_offset',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'pagination_limit':
                        (int,),
                    'pagination_offset':
                        (int,),
                },
                'attribute_map': {
                    'id': 'id',
                    'pagination_limit': '_paginationLimit',
                    'pagination_offset': '_paginationOffset',
                },
                'location_map': {
                    'id': 'query',
                    'pagination_limit': 'query',
                    'pagination_offset': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

        self.request_tick_history_leve2_files_endpoint = _Endpoint(
            settings={
                'response_type': (
                  { 202: (SubmittedResponse,), 400: (Status,), 401: (Status,), 403: (Status,), 429: (Status,), 500: (Status,),  },
                  None
                ),
                'auth': [
                    'FactSetApiKey',
                    'FactSetOAuth2'
                ],
                'endpoint_path': '/level2/files/create',
                'operation_id': 'request_tick_history_leve2_files',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'level_two_request',
                ],
                'required': [
                    'level_two_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'level_two_request':
                        (LevelTwoRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'level_two_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )


    @staticmethod
    def apply_kwargs_defaults(kwargs, return_http_data_only, async_req):
        kwargs["async_req"] = async_req
        kwargs["_return_http_data_only"] = return_http_data_only
        kwargs["_preload_content"] = kwargs.get("_preload_content", True)
        kwargs["_request_timeout"] = kwargs.get("_request_timeout", None)
        kwargs["_check_input_type"] = kwargs.get("_check_input_type", True)
        kwargs["_check_return_type"] = kwargs.get("_check_return_type", True)
        kwargs["_spec_property_naming"] = kwargs.get("_spec_property_naming", False)
        kwargs["_content_type"] = kwargs.get("_content_type")
        kwargs["_host_index"] = kwargs.get("_host_index")


    def get_level2_file_status(
        self,
        id,
        **kwargs
    ) -> GetLevel2FileStatusResponseWrapper:
        """Returns the status of the ID  # noqa: E501

        Need to plug-in the id get from /create endpoint into /status endpoint  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): id returned by files create endpoint to poll and collect status of the query

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            GetLevel2FileStatusResponseWrapper
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        return self.get_level2_file_status_endpoint.call_with_http_info(**kwargs)

    def get_level2_file_status_with_http_info(
        self,
        id,
        **kwargs
    ) -> typing.Tuple[GetLevel2FileStatusResponseWrapper, int, typing.MutableMapping]:
        """Returns the status of the ID  # noqa: E501

        Need to plug-in the id get from /create endpoint into /status endpoint  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): id returned by files create endpoint to poll and collect status of the query

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            GetLevel2FileStatusResponseWrapper
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        return self.get_level2_file_status_endpoint.call_with_http_info(**kwargs)

    def get_level2_file_status_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[GetLevel2FileStatusResponseWrapper]":
        """Returns the status of the ID  # noqa: E501

        Need to plug-in the id get from /create endpoint into /status endpoint  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): id returned by files create endpoint to poll and collect status of the query

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[GetLevel2FileStatusResponseWrapper]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        return self.get_level2_file_status_endpoint.call_with_http_info(**kwargs)

    def get_level2_file_status_with_http_info_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[GetLevel2FileStatusResponseWrapper, int, typing.MutableMapping]]":
        """Returns the status of the ID  # noqa: E501

        Need to plug-in the id get from /create endpoint into /status endpoint  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): id returned by files create endpoint to poll and collect status of the query

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(GetLevel2FileStatusResponseWrapper, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        return self.get_level2_file_status_endpoint.call_with_http_info(**kwargs)


    def get_tick_history_level2_files(
        self,
        id,
        **kwargs
    ) -> GetTickHistoryLevel2FilesResponseWrapper:
        """Returns the tick history files requested in the /create endpoint  # noqa: E501

        Returns the files from tickhistory endpoint  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            id (str): id returned by files create endpoint to poll and collect results of the query

        Keyword Args:
            pagination_limit (int): Specifies the maximum number of results to return per response page. [optional] if omitted the server will use the default value of 20
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results. [optional] if omitted the server will use the default value of 0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            GetTickHistoryLevel2FilesResponseWrapper
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['id'] = \
            id
        return self.get_tick_history_level2_files_endpoint.call_with_http_info(**kwargs)

    def get_tick_history_level2_files_with_http_info(
        self,
        id,
        **kwargs
    ) -> typing.Tuple[GetTickHistoryLevel2FilesResponseWrapper, int, typing.MutableMapping]:
        """Returns the tick history files requested in the /create endpoint  # noqa: E501

        Returns the files from tickhistory endpoint  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            id (str): id returned by files create endpoint to poll and collect results of the query

        Keyword Args:
            pagination_limit (int): Specifies the maximum number of results to return per response page. [optional] if omitted the server will use the default value of 20
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results. [optional] if omitted the server will use the default value of 0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            GetTickHistoryLevel2FilesResponseWrapper
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['id'] = \
            id
        return self.get_tick_history_level2_files_endpoint.call_with_http_info(**kwargs)

    def get_tick_history_level2_files_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[GetTickHistoryLevel2FilesResponseWrapper]":
        """Returns the tick history files requested in the /create endpoint  # noqa: E501

        Returns the files from tickhistory endpoint  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            id (str): id returned by files create endpoint to poll and collect results of the query

        Keyword Args:
            pagination_limit (int): Specifies the maximum number of results to return per response page. [optional] if omitted the server will use the default value of 20
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results. [optional] if omitted the server will use the default value of 0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[GetTickHistoryLevel2FilesResponseWrapper]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['id'] = \
            id
        return self.get_tick_history_level2_files_endpoint.call_with_http_info(**kwargs)

    def get_tick_history_level2_files_with_http_info_async(
        self,
        id,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[GetTickHistoryLevel2FilesResponseWrapper, int, typing.MutableMapping]]":
        """Returns the tick history files requested in the /create endpoint  # noqa: E501

        Returns the files from tickhistory endpoint  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            id (str): id returned by files create endpoint to poll and collect results of the query

        Keyword Args:
            pagination_limit (int): Specifies the maximum number of results to return per response page. [optional] if omitted the server will use the default value of 20
            pagination_offset (int): Specifies the starting point for pagination. This parameter is used to identify the beginning of next set of results. [optional] if omitted the server will use the default value of 0
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(GetTickHistoryLevel2FilesResponseWrapper, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['id'] = \
            id
        return self.get_tick_history_level2_files_endpoint.call_with_http_info(**kwargs)


    def request_tick_history_leve2_files(
        self,
        level_two_request,
        **kwargs
    ) -> SubmittedResponse:
        """Returns the ID for the requested data.  # noqa: E501

        Data available from past 6 years to previous day.  # noqa: E501
        This method makes a synchronous HTTP request. Returns the http data only

        Args:
            level_two_request (LevelTwoRequest):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            SubmittedResponse
                Response Object
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=False)
        kwargs['level_two_request'] = \
            level_two_request
        return self.request_tick_history_leve2_files_endpoint.call_with_http_info(**kwargs)

    def request_tick_history_leve2_files_with_http_info(
        self,
        level_two_request,
        **kwargs
    ) -> typing.Tuple[SubmittedResponse, int, typing.MutableMapping]:
        """Returns the ID for the requested data.  # noqa: E501

        Data available from past 6 years to previous day.  # noqa: E501
        This method makes a synchronous HTTP request. Returns http data, http status and headers

        Args:
            level_two_request (LevelTwoRequest):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            SubmittedResponse
                Response Object
            int
                Http Status Code
            dict
                Dictionary of the response headers
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=False)
        kwargs['level_two_request'] = \
            level_two_request
        return self.request_tick_history_leve2_files_endpoint.call_with_http_info(**kwargs)

    def request_tick_history_leve2_files_async(
        self,
        level_two_request,
        **kwargs
    ) -> "ApplyResult[SubmittedResponse]":
        """Returns the ID for the requested data.  # noqa: E501

        Data available from past 6 years to previous day.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns the http data, wrapped in ApplyResult

        Args:
            level_two_request (LevelTwoRequest):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[SubmittedResponse]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=True, async_req=True)
        kwargs['level_two_request'] = \
            level_two_request
        return self.request_tick_history_leve2_files_endpoint.call_with_http_info(**kwargs)

    def request_tick_history_leve2_files_with_http_info_async(
        self,
        level_two_request,
        **kwargs
    ) -> "ApplyResult[typing.Tuple[SubmittedResponse, int, typing.MutableMapping]]":
        """Returns the ID for the requested data.  # noqa: E501

        Data available from past 6 years to previous day.  # noqa: E501
        This method makes a asynchronous HTTP request. Returns http data, http status and headers, wrapped in ApplyResult

        Args:
            level_two_request (LevelTwoRequest):

        Keyword Args:
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True. NOTE: if this API returns a file, it is the responsibility
                of the caller to close the file stream.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
        Returns:
            ApplyResult[(SubmittedResponse, int, typing.Dict)]
        """
        self.apply_kwargs_defaults(kwargs=kwargs, return_http_data_only=False, async_req=True)
        kwargs['level_two_request'] = \
            level_two_request
        return self.request_tick_history_leve2_files_endpoint.call_with_http_info(**kwargs)


