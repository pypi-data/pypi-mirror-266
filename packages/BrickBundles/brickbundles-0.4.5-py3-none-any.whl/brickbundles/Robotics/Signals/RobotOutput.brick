RobotOutput is Physics.Signals.Output:
  .doc: """
A filter that accepts signals from specified sources and composes them into a RobotOutputSignal
- Signal values from `sensors` will be composed into `sensor_values` with possibly multiple values under the name of the sensor.

The following signals are unnamed, so the order is important:
- Signal values from `angle_sources` will be composed in order into `angles`
- Signal values from `angular_velocity_sources` will be composed in irder into `angular_velocities`
- Signal values from `torque_sources` will be composed in order into `torques`
- Signal values from `object_sources` will be composed in order into `object_values`.

"""

    # These three are per hinge, i.e the length of each list is the number of hinges - how reflect?
    angle_sources is Physics3D.Signals.HingeAngleOutput[]: []
    angular_velocity_sources is Physics3D.Signals.HingeAngularVelocityOutput[]: []
    torque_sources is DriveTrain.Signals.GearTorqueOutput[]: []
    # object_sources are unnamed and arrives in the order defined by this list
    object_sources is Physics.Signals.Output[]: []

    sensors is Robotics.Signals.Sensor[]: []
    fn process(output: Physics.Signals.Output, signals: Physics.Signals.OutputSignal[]) -> Physics.Signals.OutputSignal
