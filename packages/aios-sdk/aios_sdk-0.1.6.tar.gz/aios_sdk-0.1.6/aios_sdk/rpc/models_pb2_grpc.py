# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import models_pb2 as models__pb2


class ModelsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.List = channel.unary_unary(
                '/models_service.ModelsService/List',
                request_serializer=models__pb2.ListRequest.SerializeToString,
                response_deserializer=models__pb2.ListResponse.FromString,
                )
        self.Info = channel.unary_unary(
                '/models_service.ModelsService/Info',
                request_serializer=models__pb2.InfoRequest.SerializeToString,
                response_deserializer=models__pb2.InfoResponse.FromString,
                )
        self.Meta = channel.unary_unary(
                '/models_service.ModelsService/Meta',
                request_serializer=models__pb2.MetaRequest.SerializeToString,
                response_deserializer=models__pb2.MetaResponse.FromString,
                )
        self.StartDownload = channel.unary_stream(
                '/models_service.ModelsService/StartDownload',
                request_serializer=models__pb2.StartDownloadRequest.SerializeToString,
                response_deserializer=models__pb2.DownloadInfo.FromString,
                )
        self.Remove = channel.unary_unary(
                '/models_service.ModelsService/Remove',
                request_serializer=models__pb2.RemoveRequest.SerializeToString,
                response_deserializer=models__pb2.RemoveResponse.FromString,
                )


class ModelsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def List(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Meta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartDownload(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Remove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ModelsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'List': grpc.unary_unary_rpc_method_handler(
                    servicer.List,
                    request_deserializer=models__pb2.ListRequest.FromString,
                    response_serializer=models__pb2.ListResponse.SerializeToString,
            ),
            'Info': grpc.unary_unary_rpc_method_handler(
                    servicer.Info,
                    request_deserializer=models__pb2.InfoRequest.FromString,
                    response_serializer=models__pb2.InfoResponse.SerializeToString,
            ),
            'Meta': grpc.unary_unary_rpc_method_handler(
                    servicer.Meta,
                    request_deserializer=models__pb2.MetaRequest.FromString,
                    response_serializer=models__pb2.MetaResponse.SerializeToString,
            ),
            'StartDownload': grpc.unary_stream_rpc_method_handler(
                    servicer.StartDownload,
                    request_deserializer=models__pb2.StartDownloadRequest.FromString,
                    response_serializer=models__pb2.DownloadInfo.SerializeToString,
            ),
            'Remove': grpc.unary_unary_rpc_method_handler(
                    servicer.Remove,
                    request_deserializer=models__pb2.RemoveRequest.FromString,
                    response_serializer=models__pb2.RemoveResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'models_service.ModelsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ModelsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def List(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/models_service.ModelsService/List',
            models__pb2.ListRequest.SerializeToString,
            models__pb2.ListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/models_service.ModelsService/Info',
            models__pb2.InfoRequest.SerializeToString,
            models__pb2.InfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Meta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/models_service.ModelsService/Meta',
            models__pb2.MetaRequest.SerializeToString,
            models__pb2.MetaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartDownload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/models_service.ModelsService/StartDownload',
            models__pb2.StartDownloadRequest.SerializeToString,
            models__pb2.DownloadInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Remove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/models_service.ModelsService/Remove',
            models__pb2.RemoveRequest.SerializeToString,
            models__pb2.RemoveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
