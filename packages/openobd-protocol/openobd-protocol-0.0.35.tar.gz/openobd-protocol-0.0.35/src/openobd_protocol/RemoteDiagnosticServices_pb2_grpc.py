# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from openobd_protocol import Authentication_pb2 as openobd__protocol_dot_Authentication__pb2
from openobd_protocol import BasicResponse_pb2 as openobd__protocol_dot_BasicResponse__pb2
from openobd_protocol import BusConfiguration_pb2 as openobd__protocol_dot_BusConfiguration__pb2
from openobd_protocol import ModuleConfiguration_pb2 as openobd__protocol_dot_ModuleConfiguration__pb2
from openobd_protocol import ObdMessage_pb2 as openobd__protocol_dot_ObdMessage__pb2
from openobd_protocol import Status_pb2 as openobd__protocol_dot_Status__pb2


class RemoteDiagnosticServicesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.configureBus = channel.unary_unary(
                '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/configureBus',
                request_serializer=openobd__protocol_dot_BusConfiguration__pb2.BusConfiguration.SerializeToString,
                response_deserializer=openobd__protocol_dot_Status__pb2.Status.FromString,
                )
        self.configureBuses = channel.stream_unary(
                '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/configureBuses',
                request_serializer=openobd__protocol_dot_BusConfiguration__pb2.BusConfiguration.SerializeToString,
                response_deserializer=openobd__protocol_dot_Status__pb2.Status.FromString,
                )
        self.Authenticate = channel.unary_unary(
                '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/Authenticate',
                request_serializer=openobd__protocol_dot_Authentication__pb2.AuthenticationRequest.SerializeToString,
                response_deserializer=openobd__protocol_dot_Authentication__pb2.AuthenticationResponse.FromString,
                )
        self.RefreshAuthentication = channel.unary_unary(
                '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/RefreshAuthentication',
                request_serializer=openobd__protocol_dot_Authentication__pb2.AuthenticationRequest.SerializeToString,
                response_deserializer=openobd__protocol_dot_Authentication__pb2.AuthenticationResponse.FromString,
                )
        self.requestModuleConfiguration = channel.unary_unary(
                '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/requestModuleConfiguration',
                request_serializer=openobd__protocol_dot_ModuleConfiguration__pb2.ModuleConfiguration.SerializeToString,
                response_deserializer=openobd__protocol_dot_BasicResponse__pb2.Result.FromString,
                )
        self.sendObdMessage = channel.unary_unary(
                '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/sendObdMessage',
                request_serializer=openobd__protocol_dot_ObdMessage__pb2.ObdMessage.SerializeToString,
                response_deserializer=openobd__protocol_dot_ObdMessage__pb2.ObdMessage.FromString,
                )
        self.openObdMessageChannel = channel.stream_stream(
                '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/openObdMessageChannel',
                request_serializer=openobd__protocol_dot_ObdMessage__pb2.ObdMessage.SerializeToString,
                response_deserializer=openobd__protocol_dot_ObdMessage__pb2.ObdMessage.FromString,
                )


class RemoteDiagnosticServicesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def configureBus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def configureBuses(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Authenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RefreshAuthentication(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def requestModuleConfiguration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendObdMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def openObdMessageChannel(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RemoteDiagnosticServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'configureBus': grpc.unary_unary_rpc_method_handler(
                    servicer.configureBus,
                    request_deserializer=openobd__protocol_dot_BusConfiguration__pb2.BusConfiguration.FromString,
                    response_serializer=openobd__protocol_dot_Status__pb2.Status.SerializeToString,
            ),
            'configureBuses': grpc.stream_unary_rpc_method_handler(
                    servicer.configureBuses,
                    request_deserializer=openobd__protocol_dot_BusConfiguration__pb2.BusConfiguration.FromString,
                    response_serializer=openobd__protocol_dot_Status__pb2.Status.SerializeToString,
            ),
            'Authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.Authenticate,
                    request_deserializer=openobd__protocol_dot_Authentication__pb2.AuthenticationRequest.FromString,
                    response_serializer=openobd__protocol_dot_Authentication__pb2.AuthenticationResponse.SerializeToString,
            ),
            'RefreshAuthentication': grpc.unary_unary_rpc_method_handler(
                    servicer.RefreshAuthentication,
                    request_deserializer=openobd__protocol_dot_Authentication__pb2.AuthenticationRequest.FromString,
                    response_serializer=openobd__protocol_dot_Authentication__pb2.AuthenticationResponse.SerializeToString,
            ),
            'requestModuleConfiguration': grpc.unary_unary_rpc_method_handler(
                    servicer.requestModuleConfiguration,
                    request_deserializer=openobd__protocol_dot_ModuleConfiguration__pb2.ModuleConfiguration.FromString,
                    response_serializer=openobd__protocol_dot_BasicResponse__pb2.Result.SerializeToString,
            ),
            'sendObdMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.sendObdMessage,
                    request_deserializer=openobd__protocol_dot_ObdMessage__pb2.ObdMessage.FromString,
                    response_serializer=openobd__protocol_dot_ObdMessage__pb2.ObdMessage.SerializeToString,
            ),
            'openObdMessageChannel': grpc.stream_stream_rpc_method_handler(
                    servicer.openObdMessageChannel,
                    request_deserializer=openobd__protocol_dot_ObdMessage__pb2.ObdMessage.FromString,
                    response_serializer=openobd__protocol_dot_ObdMessage__pb2.ObdMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RemoteDiagnosticServices(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def configureBus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/configureBus',
            openobd__protocol_dot_BusConfiguration__pb2.BusConfiguration.SerializeToString,
            openobd__protocol_dot_Status__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def configureBuses(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/configureBuses',
            openobd__protocol_dot_BusConfiguration__pb2.BusConfiguration.SerializeToString,
            openobd__protocol_dot_Status__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/Authenticate',
            openobd__protocol_dot_Authentication__pb2.AuthenticationRequest.SerializeToString,
            openobd__protocol_dot_Authentication__pb2.AuthenticationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RefreshAuthentication(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/RefreshAuthentication',
            openobd__protocol_dot_Authentication__pb2.AuthenticationRequest.SerializeToString,
            openobd__protocol_dot_Authentication__pb2.AuthenticationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def requestModuleConfiguration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/requestModuleConfiguration',
            openobd__protocol_dot_ModuleConfiguration__pb2.ModuleConfiguration.SerializeToString,
            openobd__protocol_dot_BasicResponse__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendObdMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/sendObdMessage',
            openobd__protocol_dot_ObdMessage__pb2.ObdMessage.SerializeToString,
            openobd__protocol_dot_ObdMessage__pb2.ObdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def openObdMessageChannel(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/com.jifeline.OpenOBD.Protocol.RemoteDiagnosticServices/openObdMessageChannel',
            openobd__protocol_dot_ObdMessage__pb2.ObdMessage.SerializeToString,
            openobd__protocol_dot_ObdMessage__pb2.ObdMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
