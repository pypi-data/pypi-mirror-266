services:
  postgres12:
    networks:
      - default
    image: postgres:12
    ports:
      - "5423:5432" # use a non-standard port here
    environment:
      POSTGRES_PASSWORD: super-secret
  postgres13:
    networks:
      - default
    image: postgres:13
    ports:
      - "5424:5432" # use a non-standard port here
    environment:
      POSTGRES_PASSWORD: super-secret
  postgres14:
    networks:
      - default
    image: postgres:14
    ports:
      - "5425:5432" # use a non-standard port here
    environment:
      POSTGRES_PASSWORD: super-secret
  postgres15:
    networks:
      - default
    image: postgres:15
    ports:
      - "5426:5432" # use a non-standard port here
    environment:
      POSTGRES_PASSWORD: super-secret
  postgres16:
    networks:
      - default
    image: postgres:16
    ports:
      - "5427:5432" # use a non-standard port here
    environment:
      POSTGRES_PASSWORD: super-secret
  mariadb113:
    networks:
      - default
    image: mariadb:11.3
    ports:
      - "3359:3306" # use a non-standard port here
    environment:
      MARIADB_ROOT_PASSWORD: super-secret
      MARIADB_PASSWORD: super-secret
      MARIADB_USER: app
      MARIADB_DATABASE: db
      MARIADB_ROOT_HOST: "%"
      LANG: C.UTF-8
  mysql8:
    networks:
      - default
    image: mysql:latest
    ports:
      - "3360:3306" # use a non-standard port here
    environment:
      MYSQL_ROOT_PASSWORD: super-secret
      MYSQL_PASSWORD: super-secret
      MYSQL_USER: app
      MYSQL_DATABASE: db
      MYSQL_ROOT_HOST: "%"
      LANG: C.UTF-8
  mysql57:
    networks:
      - default
    image: mysql:5.7
    ports:
      - "3362:3306" # use a non-standard port here
    environment:
      MYSQL_ROOT_PASSWORD: super-secret
      MYSQL_PASSWORD: super-secret
      MYSQL_USER: app
      MYSQL_DATABASE: db
      MYSQL_ROOT_HOST: "%"
      LANG: C.UTF-8
  mysql56:
    networks:
      - default
    image: mysql:5.6
    ports:
      - "3363:3306" # use a non-standard port here
    environment:
      MYSQL_ROOT_PASSWORD: super-secret
      MYSQL_PASSWORD: super-secret
      MYSQL_USER: app
      MYSQL_DATABASE: db
      MYSQL_ROOT_HOST: "%"
      LANG: C.UTF-8
  oracle18c:
    networks:
      - default
    image: gvenzl/oracle-xe:18-slim-faststart
    ports:
      - "1514:1521" # use a non-standard port here
    environment:
      ORACLE_PASSWORD: super-secret
      APP_USER_PASSWORD: super-secret
      APP_USER: app
  oracle23c:
    networks:
      - default
    image: gvenzl/oracle-free:23-slim-faststart
    ports:
      - "1513:1521" # use a non-standard port here
    environment:
      ORACLE_PASSWORD: super-secret
      APP_USER_PASSWORD: super-secret
      APP_USER: app
  mssql2022:
    networks:
      - default
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "4133:1433" # use a non-standard port here
    environment:
      SA_PASSWORD: Super-secret1
      MSSQL_PID: Developer
      ACCEPT_EULA: Accepted
      MSSQL_TCP_PORT: 1433
  spanner:
    image: gcr.io/cloud-spanner-emulator/emulator:latest
    ports:
      - "9010:9010"
  # Init (Create Instance)
  spanner_init:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:332.0.0-slim
    command: >
      bash -c 'gcloud config configurations create emulator &&
              gcloud config set auth/disable_credentials true &&
              gcloud config set project $${PROJECT_ID} &&
              gcloud config set auth/disable_credentials true &&
              gcloud spanner instances create $${INSTANCE_NAME} --config=emulator-config --description=Emulator --nodes=1'
    environment:
      PROJECT_ID: emulator-test-project
      INSTANCE_NAME: test-instance
      DATABASE_NAME: test-database
    depends_on:
      - spanner
  cockroachdb:
    image: cockroachdb/cockroach:latest-v23.1
    command: start-single-node --insecure
    restart: "no"
    expose:
      - "8080"
      - "26257"
    ports:
      - "26257:26257"
      - "8880:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: 3s
      timeout: 3s
      retries: 5
  redis:
    image: redis
    ports:
      - "6397:6379"
  keydb:
    image: eqalpha/keydb
    ports:
      - "6396:6379"
  dragonfly:
    image: "docker.dragonflydb.io/dragonflydb/dragonfly"
    ulimits:
      memlock: -1
    ports:
      - "6398:6379"
    # For better performance, consider `host` mode instead `port` to avoid docker NAT.
    # `host` mode is NOT currently supported in Swarm Mode.
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#network_mode
    # network_mode: "host"
    volumes:
      - dragonflydata:/data
networks:
  default:
    driver: bridge
volumes:
  dragonflydata:
