services:
  postgres12:
    networks:
      - default
    image: postgres:12
    ports:
      - "${POSTGRES12_PORT}:5432" # use a non-standard port here
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  postgres13:
    networks:
      - default
    image: postgres:13
    ports:
      - "${POSTGRES13_PORT}:5432" # use a non-standard port here
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  postgres14:
    networks:
      - default
    image: postgres:14
    ports:
      - "${POSTGRES14_PORT}:5432" # use a non-standard port here
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  postgres15:
    networks:
      - default
    image: postgres:15
    ports:
      - "${POSTGRES15_PORT}:5432" # use a non-standard port here
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  postgres16:
    networks:
      - default
    image: postgres:16
    ports:
      - "${POSTGRES16_PORT}:5432" # use a non-standard port here
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  mariadb113:
    networks:
      - default
    image: mariadb:11.3
    ports:
      - "${MARIADB113_PORT}:3306" # use a non-standard port here
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_PASSWORD: ${MARIADB_PASSWORD}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_DATABASE: ${MARIADB_DATABASE}
      MARIADB_ROOT_HOST: "%"
      LANG: C.UTF-8
  mysql8:
    networks:
      - default
    image: mysql:latest
    ports:
      - "${MYSQL8_PORT}:3306" # use a non-standard port here
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_HOST: "%"
      LANG: C.UTF-8
  mysql57:
    networks:
      - default
    image: mysql:5.7
    ports:
      - "${MYSQL57_PORT}:3306" # use a non-standard port here
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_HOST: "%"
      LANG: C.UTF-8
  mysql56:
    networks:
      - default
    image: mysql:5.6
    ports:
      - "${MYSQL56_PORT}:3306" # use a non-standard port here
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_HOST: "%"
      LANG: C.UTF-8
  oracle18c:
    networks:
      - default
    image: gvenzl/oracle-xe:18-slim-faststart
    ports:
      - "${ORACLE18C_PORT}:1521" # use a non-standard port here
    environment:
      ORACLE_PASSWORD: ${ORACLE_SYSTEM_PASSWORD}
      APP_USER_PASSWORD: ${ORACLE_PASSWORD}
      APP_USER: ${ORACLE_USER}
  oracle23c:
    networks:
      - default
    image: gvenzl/oracle-free:23-slim-faststart
    ports:
      - "${ORACLE23C_PORT}:1521" # use a non-standard port here
    environment:
      ORACLE_PASSWORD: ${ORACLE_SYSTEM_PASSWORD}
      APP_USER_PASSWORD: ${ORACLE_PASSWORD}
      APP_USER: ${ORACLE_USER}
  mssql2022:
    networks:
      - default
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "${MSSQL2022_PORT:-4133}:1433" # use a non-standard port here
    environment:
      SA_PASSWORD: ${MSSQL_PASSWORD:-Super-secret1}
      MSSQL_PID: Developer
      ACCEPT_EULA: Accepted
      MSSQL_TCP_PORT: 1433
  spanner:
    image: gcr.io/cloud-spanner-emulator/emulator:latest
    ports:
      - "${SPANNER_PORT}:9010"
  # Init (Create Instance)
  spanner_init:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:332.0.0-slim
    command: >
      bash -c 'gcloud config configurations create emulator &&
              gcloud config set auth/disable_credentials true &&
              gcloud config set project $${PROJECT_ID} &&
              gcloud config set auth/disable_credentials true &&
              gcloud spanner instances create $${INSTANCE_NAME} --config=emulator-config --description=Emulator --nodes=1'
    environment:
      PROJECT_ID: ${GOOGLE_CLOUD_PROJECT}
      INSTANCE_NAME: ${SPANNER_INSTANCE}
      DATABASE_NAME: ${SPANNER_DATABASE}
    depends_on:
      - spanner
  cockroachdb:
    image: cockroachdb/cockroach:latest-v23.1
    command: start-single-node --insecure
    restart: "no"
    expose:
      - "8080"
      - "${COCKROACHDB_PORT}"
    ports:
      - "${COCKROACHDB_PORT}:26257"
      - "8880:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: 3s
      timeout: 3s
      retries: 5
  redis:
    image: redis
    ports:
      - "${REDIS_PORT}:6379"
  keydb:
    image: eqalpha/keydb
    ports:
      - "${KEYDB_PORT}:6379"
  dragonfly:
    image: "docker.dragonflydb.io/dragonflydb/dragonfly"
    ulimits:
      memlock: -1
    ports:
      - "${DRAGONFLY_PORT}:6379"
    # For better performance, consider `host` mode instead `port` to avoid docker NAT.
    # `host` mode is NOT currently supported in Swarm Mode.
    # https://docs.docker.com/compose/compose-file/compose-file-v3/#network_mode
    # network_mode: "host"
    volumes:
      - dragonflydata:/data
networks:
  default:
    driver: bridge
volumes:
  dragonflydata:
