[tool.poetry]
name = "faust-avro-model-codegen"
version = "0.1.5"
description = "Generate Faust Avro Models from Avro Schema files."
authors = ["Sean Zicari <szicari@streambit.software, Brad Boggs <bboggs@streambit.software>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/bboggs-streambit/faust-avro-model-codegen"

[tool.poetry.dependencies]
python = ">=3.10"
typer = ">=0.9.0"
autoflake = ">2.0.0"
jinja2 = "^3.1.3"
black = ">23.0.0"
isort = "^5.13.2"
rich = "^13.7.1"
httpx = "^0.27.0"
dataclasses-avroschema = {extras = ["faust"], version = ">=0.58.0"}
mode-streaming = "<0.4.0"
pydantic = ">1.0.0"
plumbum = "^1.8.2"
tomlkit = ">=0.12.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
pydevd-pycharm = ">=232.9559.11,<232.9560.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
omit = ["*/site-packages/*" ,"*/distutils/*" ,"*/tests/*" ,"*/__init__.py", "*/__main__.py"]
[tool.coverage.report]
exclude_lines = ['if TYPE_CHECKING', 'case never', 'typing.assert_never']

[tool.pytest.ini_options]
addopts = "-v --cov=faust_avro_code_gen --cov-report=term-missing --cov-report=xml --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py", " *_tests.py", "*test*.py"]
pythonpath = "."
