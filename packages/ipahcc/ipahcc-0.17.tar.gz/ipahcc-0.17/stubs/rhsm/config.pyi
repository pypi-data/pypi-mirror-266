from _typeshed import Incomplete
from typing import Dict, List, Optional, Tuple

CONFIG_ENV_VAR: str
DEFAULT_CONFIG_DIR: str
HOST_CONFIG_DIR: str
DEFAULT_CONFIG_PATH: Incomplete
DEFAULT_PROXY_PORT: str
DEFAULT_SERVER_TIMEOUT: str
DEFAULT_HOSTNAME: str
DEFAULT_PORT: str
DEFAULT_PREFIX: str
DEFAULT_CDN_HOSTNAME: str
DEFAULT_CDN_PORT: str
DEFAULT_CDN_PREFIX: str
DEFAULT_CA_CERT_DIR: str
DEFAULT_ENT_CERT_DIR: str
HOST_ENT_CERT_DIR: str
SERVER_DEFAULTS: Incomplete
RHSM_DEFAULTS: Incomplete
RHSMCERTD_DEFAULTS: Incomplete
LOGGING_DEFAULTS: Incomplete
DEFAULTS: Incomplete
log: Incomplete

def in_container() -> bool: ...

class RhsmConfigParser:
    config_file: Incomplete
    def __init__(
        self,
        config_file: Optional[str] = None,
        defaults: Incomplete | None = None,
    ) -> None: ...
    def read(self, file_names: Optional[List[str]] = None) -> List[str]: ...
    def save(self, config_file: Optional[str] = None) -> None: ...
    def get(self, section: str, prop: str) -> str: ...
    def set(self, section: str, name: str, value: str) -> None: ...
    def is_log_level_valid(
        self, value: str, print_warning: bool = True
    ) -> bool: ...
    def get_int(self, section: str, prop: str) -> Optional[int]: ...
    def defaults(self) -> Dict[str, str]: ...
    def sections(self) -> List[str]: ...
    def has_option(self, section: str, prop: str) -> bool: ...
    def items(self, section: str) -> List[Tuple[str, str]]: ...
    def options(self, section: str) -> List[str]: ...
    def is_default(self, section: str, prop: str, value: str) -> bool: ...
    def has_default(self, section: str, prop: str) -> bool: ...
    def get_default(self, section: str, prop: str) -> Optional[str]: ...

class RhsmHostConfigParser(RhsmConfigParser):
    def __init__(
        self,
        config_file: Optional[str] = None,
        defaults: Incomplete | None = None,
    ) -> None: ...

CFG: Optional[RhsmConfigParser]

def get_config_parser() -> RhsmConfigParser: ...
def initConfig(configFile: Incomplete | None = None): ...
