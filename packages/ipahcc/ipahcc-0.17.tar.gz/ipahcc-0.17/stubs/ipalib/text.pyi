from _typeshed import Incomplete
from ipalib.request import context as context

unicode = str

def create_translation(key): ...

class LazyText:
    __hash__: Incomplete
    domain: Incomplete
    localedir: Incomplete
    key: Incomplete
    args: Incomplete
    def __init__(
        self,
        domain: Incomplete | None = ...,
        localedir: Incomplete | None = ...,
    ) -> None: ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __add__(self, other): ...
    def __radd__(self, other): ...

class Gettext(LazyText):
    msg: Incomplete
    args: Incomplete
    def __init__(
        self,
        msg,
        domain: Incomplete | None = ...,
        localedir: Incomplete | None = ...,
    ) -> None: ...
    def as_unicode(self): ...
    def __json__(self): ...
    def __mod__(self, kw): ...
    def format(self, *args, **kwargs): ...
    def expandtabs(self, tabsize: int = ...): ...

class FixMe(Gettext): ...

class NGettext(LazyText):
    singular: Incomplete
    plural: Incomplete
    args: Incomplete
    def __init__(
        self,
        singular,
        plural,
        domain: Incomplete | None = ...,
        localedir: Incomplete | None = ...,
    ) -> None: ...
    def __mod__(self, kw): ...
    def format(self, *args, **kwargs): ...
    def __call__(self, count): ...

class ConcatenatedLazyText:
    components: Incomplete
    def __init__(self, *components) -> None: ...
    def __json__(self): ...
    def __mod__(self, kw): ...
    def format(self, *args, **kwargs): ...
    def __add__(self, other): ...
    def __radd__(self, other): ...
    def expandtabs(self, tabsize: int = ...): ...

class GettextFactory:
    domain: Incomplete
    localedir: Incomplete
    def __init__(
        self, domain: str = ..., localedir: Incomplete | None = ...
    ) -> None: ...
    def __call__(self, msg): ...

class NGettextFactory(GettextFactory):
    def __call__(self, singular, plural, count): ...

ngettext: Incomplete
ugettext: Incomplete
_: Incomplete
